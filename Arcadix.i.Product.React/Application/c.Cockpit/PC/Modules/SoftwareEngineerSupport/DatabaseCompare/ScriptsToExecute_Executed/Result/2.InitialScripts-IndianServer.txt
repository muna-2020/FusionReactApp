ALTER procedure Proc_Fusion_StandardTestProvider_AssignTestResultsToPupil                                                  
(                                                  
 @vAddData  nvarchar(max),                                                          
 @uCycleId uniqueidentifier,                                        
 @uClassId uniqueidentifier,                                        
 @uTestId uniqueidentifier,                                        
 @uPupilId uniqueidentifier,                                        
 @iCycleRepetition int                                        
)                                                  
AS                                                  
Begin                                             
 /********************************************************************************************                                                                  
 Created By:  Sanjay                                                                  
 Create Date:  02.07.2019            
 Description:  Insert the result from one pupil to another pupil. Move data                                            
                                                        
 ********************************************************************************************/                      
                     
 if(not exists(select * from t_TestDrive_Test_Token tt                       
 join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                      
 where uPupilId = @uPupilId and uTestId = @uTestId                                                   
    and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                  
 Begin                       
   Begin Transaction                                                  
   Begin Try                                                    
  -- delete the recieptent token if already exists.                                              
  if(exists(select uTesttokenId from t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                                                   
  and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                  
  Begin                                                   
   Delete  t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                  
   and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition                                                  
  End                                                  
          
                                             
   Declare @uNewTokenId uniqueidentifier           
                                               
    set @uNewTokenId = NEWID()                                        
          print 'insertion starts'                                 
      ---Insert into token table                   
  INSERT INTO [t_TestDrive_Test_Token]                    
   ([uTestTokenId]                                                    
   ,[vTestTokenNumber]                                                    
   ,[uCycleId]                                                    
   ,[uPupilId]                                                    
   ,[uTestId]                                                    
   ,[dtCreatedOn]                                                    
   ,[uClassId]                                                    
   ,[uParentTestId]                                                    
   ,[iCycleRepetition])                                                    
   select @uNewTokenId,vTestTokenNumber,@uCycleId,@uPupilId,@uTestId,GETDATE(),@uClassId,uParentTestId,@iCycleRepetition                                                            
   from OPENJSON(@vAddData)WITH (                                          
   vTestTokenNumber nvarchar(20),       
   uParentTestId uniqueidentifier                                                         
   )                                         
print @uNewTokenId                           
                       
-- Insert into execution table. new id for each execution                                        
Declare @uNewExecutionId uniqueidentifier                                        
    set @uNewExecutionId = NEWID()                                        
                                            
Declare @TestExecutionJson nvarchar(max) = (select TestExecution from openjson(@vAddData)with(          
TestExecution nvarchar(max) as json          
))          
          
          
    insert dbo.t_testdrive_test_execution                  
   ([uExecutionId],[uTestTokenId],[dtTestStart],[dtTestEnd],[iSoundVolume],[iTestStatusId],[dBound1],[dBound2]                                                  
   ,[dStartProb],[dTestSubjectConstance],[dTestSubjectVariance],[iMaximumTasksToBeShown]                                                  
   ,[iMinimumTasksToBeShown],[dDifficultyUpperBound],[iPerfectNumber],[iLanguageId],[iTestSubjectId]                                                  
   ,[dStandardErrorConfidenceIntervalAlpha])                          
   select @uNewExecutionId,@uNewTokenId,dtTestStart,dtTestEnd,iSoundVolume,iTestStatusId,dBound1,dBound2                                    
     ,dStartProb,dTestSubjectConstance,dTestSubjectVariance,iMaximumTasksToBeShown                                                        
     ,iMinimumTasksToBeShown,dDifficultyUpperBound,iPerfectNumber,iLanguageId ,iTestSubjectId                                                  
     ,dStandardErrorConfidenceIntervalAlpha                                                  
   from OPENJSON(@TestExecutionJson)                                                               
   WITH (                                   
    dtTestStart DateTime,                                                          
    dtTestEnd DateTime,                                                          
    iSoundVolume int,                                                             
    iTestStatusId int,                                                        
    dBound1 Decimal(8,4),                                                       
    dBound2 Decimal(8,4),                                                        
    dStartProb Decimal(8,4),                                        
    dTestSubjectConstance decimal(8,4),                                                        
    dTestSubjectVariance decimal(8,4) ,                                                        
    iMaximumTasksToBeShown int ,                                                        
    iMinimumTasksToBeShown int ,                                                        
    dDifficultyUpperBound decimal(8,4),                                                        
    iPerfectNumber int ,                                                        
    iLanguageId int ,                                                  
    iTestSubjectId int ,                                                  
    dStandardErrorConfidenceIntervalAlpha decimal(8,4))                                                    
                                          
 Declare @SubSubjectDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SubSubjectDetails from openjson(@vAddData)with(          
t_TestDrive_Test_Execution_SubSubjectDetails nvarchar(max) as json          
))          
          
          
    -- Insert into execution sub subject details table. new id for each entry                                        
    insert t_TestDrive_Test_Execution_SubSubjectDetails                  
   ([uExecutionSubSubjectDetailsId]                                                  
   ,[uExecutionId]                                                  
   ,[iSubjectId]                                                  
   ,[dConstance]                                
   ,[dVariance])                                                  
   select NEWID(),@uNewExecutionId,iSubjectId,dConstance,dVariance               
   from OPENJSON(@SubSubjectDetailsJson)                                                               
   WITH (                                        
   iSubjectId int ,                
   dConstance Decimal(8,4),                                                          
   dVariance Decimal(8,4))                                   
                                                
    -- Insert into execution SystemDetails details table. new id for each entry                                        
       Declare @uNewExecutionSystemId uniqueidentifier                  
       set @uNewExecutionSystemId = NEWID()                                        
                   
    Declare @SystemDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SystemDetails from openjson(@vAddData)with(          
   t_TestDrive_Test_Execution_SystemDetails nvarchar(max) as json          
   ))          
          
       insert t_TestDrive_Test_Execution_SystemDetails                  
     ([uTestExecutionSystemDetailsId]                                                  
     ,[uExecutionId]                                                  
     ,[vIPAddress]                   
     ,[dtDatetimeOfLogin]                              
     ,[vBrowserInformation])                                                  
   select  NEWID(),@uNewExecutionId,vIPAddress,dtDatetimeOfLogin,vBrowserInformation                                                        
   from OPENJSON(@SystemDetailsJson)                                                               
   WITH (                                            
   vIPAddress nvarchar(1000),                                                          
   dtDatetimeOfLogin datetime,                                                          
   vBrowserInformation nvarchar(max))                                        
                                           
       -- Insert into Result table. get allresult from xml. loops through and insert into table. for each entry new id is created                                           
       Declare @uResultId uniqueidentifier                       
        Declare @ResultJson nvarchar(max) = (select t_TestDrive_Test_Result from openjson(@vAddData)with(          
    t_TestDrive_Test_Result nvarchar(max) as json          
    ))          
                                     
       Declare Cur_Result Cursor for select uResultId from OPENJSON(@ResultJson)WITH ( uResultId uniqueidentifier)                                                      
       Open Cur_Result                                                      
    Fetch next from Cur_Result into @uResultId                                                      
       while(@@Fetch_Status <> -1)                  
  Begin                                        
   Declare @uNewResultId uniqueidentifier                                        
   set @uNewResultId = NEWID()                                        
                                          
   insert t_testdrive_test_result                  
   ([uResultId],[uExecutionId],[iPageId],[iTaskStatusId],[dtCreatedOn],[iTimesShown],[iDisplayedOrder],[dNextDifficulty]                                                  
   ,[cIsCalibratedActive],[dDifficultyBefore],[dDifficultyAfter],[iTaskSubjectId],[dTaskDifficulty],[iTimeTakenToAnswer]                                                  
   ,[vPageName],[iTimeAllocated],[iTaskTypeId],[iRoundNumber],[dTaskPercentage],[iTaskObjectsCorrect],[iTaskObjectsWrong]                                                  
   ,[iTaskObjectsNotAnswered],[iTaskWeightage],[cIsSeparated],[vTaskResultAttribute],[vTaskElementResultAttribute])                                                     
                                                                    
    select @uNewResultId,@uNewExecutionId,iPageId,iTaskStatusId,dtCreatedOn,iTimesShown,iDisplayedOrder,dNextDifficulty,                                                  
    cIsCalibratedActive,dDifficultyBefore,dDifficultyAfter,iTaskSubjectId,dTaskDifficulty,iTimeTakenToAnswer                                            
    ,vPageName,iTimeAllocated,iTaskTypeId,iRoundNumber,dTaskPercentage,iTaskObjectsCorrect,iTaskObjectsWrong                                                        
    ,iTaskObjectsNotAnswered,iTaskWeightage,cIsSeparated,vTaskResultAttribute,vTaskElementResultAttribute                                                        
    from OPENJSON(@ResultJson)                                                               
    WITH ( uResultId uniqueidentifier,                          
    iPageId int,                                        
    iTaskStatusId int,                                                          
    dtCreatedOn DateTime ,                                                          
    iTimesShown int ,                                                          
    iDisplayedOrder int,                                                          
    dNextDifficulty decimal(8,4),                                                        
    cIsCalibratedActive char(1) ,                                                          
    dDifficultyBefore decimal(8,4) ,                                                          
    dDifficultyAfter decimal(8,4) ,                                                        
    iTaskSubjectId int ,                    
    dTaskDifficulty decimal(8,4),                                                        
    iTimeTakenToAnswer int ,                                                        
    vPageName nvarchar(200) ,                                                        
    iTimeAllocated int ,                                       
    iTaskTypeId int ,                            
    iRoundNumber int ,                                                           
    dTaskPercentage Decimal(8,4) ,                                                        
    iTaskObjectsCorrect int ,                                                        
    iTaskObjectsWrong int ,                                                        
    iTaskObjectsNotAnswered int ,                                                        
    iTaskWeightage int ,                                                        
    cIsSeparated char(1) ,              
 vTaskResultAttribute nvarchar(max) ,              
 vTaskElementResultAttribute nvarchar(max))                                                        
    where uResultId = @uResultId                                                       
                       
   -- Insert into result values table. get all result for select result id and create new id for each for uresultvalue column.                                        
   -- and then insert orginal column values                                                   
   Declare @uResultValueId uniqueidentifier                
   Declare @ResultValuesJson nvarchar(max) = (select t_TestDrive_Test_ResultValues from openjson(@vAddData)with(          
    t_TestDrive_Test_ResultValues nvarchar(max) as json          
    ))                                                
   Declare Cur_ResultValues Cursor for select uResultValueId,uResultId from OPENJSON(@ResultValuesJson)                                                               
   WITH ( uResultValueId nvarchar(100),  
   uResultId uniqueidentifier)                                                      
   where uResultId = @uResultId                                   
   print @uResultId                  
   Open Cur_ResultValues                                                      
   fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                      
   While(@@fetch_Status <> -1)                                                      
    Begin                                
     Declare @uNewResultValueId uniqueidentifier                                        
     set @uNewResultValueId = NEWID()                                        
                                              
     Declare @vElementType nvarchar(100)                                                      
     select @vElementType = vElementType from OPENJSON(@ResultValuesJson)                                        
     WITH ( uResultValueId nvarchar(100) ,                                                       
     vElementType nvarchar(200) )             
    where uResultValueId = @uResultValueId                                 
     --print @vElementType                                              
 if(upper(@vElementType) = 'TWORADIO' or upper(@vElementType) = 'DRAGDROP')                                        
     Begin                  
       Insert t_testdrive_test_resultvalues                                        
       ([uResultValueId]                                                  
       ,[uResultId]                                                  
       ,[iElementValueId]            
       ,[vAnswerValue]                                                  
       ,[iElementId]                                                  
       ,[vElementType]                                                  
       ,[vCorrectAnswer]                                                  
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex)                     
       select @uNewResultValueId,@uNewResultId,iElementValueId,convert(nvarchar(max),vAnswerValue),iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                          
       from OPENJSON(@ResultValuesJson)                                                               
       WITH (uResultValueId uniqueidentifier,                                        
       iElementValueId int ,                                                          
       vAnswerValue nvarchar(max),                                                          
       iElementId int,                                   
       vElementType nvarchar(200),                                                        
       vCorrectAnswer nvarchar(200),                                                        
       iContainerId  int,                
    iElementDisplayedOrder  int,                
    iAnswerIndex  int)                           
       where uResultValueId = @uResultValueId                                 
       print @uResultValueId                                          
     End                                                      
       Else                                                      
     Begin                  
       Insert t_testdrive_test_resultvalues                                        
       ([uResultValueId]                                                  
       ,[uResultId]                                                  
       ,[iElementValueId]                                                  
       ,[vAnswerValue]                                                  
       ,[iElementId]                                                  
       ,[vElementType]                                                  
       ,[vCorrectAnswer]                                                  
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex  )                                                     
       select @uNewResultValueId,@uNewResultId,iElementValueId,vAnswerValue,iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                      
       from OPENJSON(@ResultValuesJson)                                                               
       WITH (uResultValueId uniqueidentifier,                                                  
       iElementValueId int ,      
       vAnswerValue nvarchar(4000),                                                          
       iElementId int ,                                                        
       vElementType nvarchar(200) ,                                                        
       vCorrectAnswer nvarchar(200) ,                                                     
       iContainerId  int,                
    iElementDisplayedOrder  int,                
    iAnswerIndex int)                                                       
       where uResultValueId = @uResultValueId                                                  
     End                                                      
     fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                      
   End                                                        
   Close Cur_ResultValues                                                      
   DeAllocate Cur_ResultValues                                                      
   Fetch next from Cur_Result into @uResultId                 
  End                                                      
  Close Cur_Result                                                      
  Deallocate Cur_Result                                                  
                                           
  -- insert into result summary table. creates new id for each entry                                        
  Declare @uNewResultSummaryId uniqueidentifier                                        
  set @uNewResultSummaryId = NEWID()                                        
                                 Declare @ResultSummary nvarchar(max) = (select t_TestDrive_test_ResultSummary from openjson(@vAddData)with(          
    t_TestDrive_test_ResultSummary nvarchar(max) as json          
    ))          
  INSERT t_TestDrive_test_ResultSummary                  
   ([uResultSummaryId]                                            
   ,[uExecutionId]                                            
   ,[iTestNumberOfTasks]                                            
   ,[dTestCorrectAnswerValue]                                            
   ,[dTestWrongAnswerValue]                                            
   ,[dTestNotAttemptedValue]                                            
   ,[dTestPoints]                                            
   ,[dTestStandardErrorConfidenceIntervalLowerBound]                                            
   ,[dTestStandardErrorConfidenceIntervalUpperBound]                
   ,[iTaskObjectsCorrect]                
   ,[iTaskObjectsNotAnswered]                
   ,[iTaskObjectsWrong]                
   ,[vResultAttribute])                                                    
     select @uNewResultSummaryId, @uNewExecutionId, iTestNumberOfTasks, dTestCorrectAnswerValue,dTestWrongAnswerValue,                                        
     dTestNotAttemptedValue,dTestPoints,dTestStandardErrorConfidenceIntervalLowerBound,dTestStandardErrorConfidenceIntervalUpperBound,iTaskObjectsCorrect                
   ,iTaskObjectsNotAnswered,iTaskObjectsWrong,vResultAttribute                                                  from OPENJSON(@ResultSummary)                                                               
     WITH (                                        
    iTestNumberOfTasks int,                                        
    dTestCorrectAnswerValue decimal(8,4) ,                                                        
    dTestWrongAnswerValue decimal(8,4),                                                 
    dTestNotAttemptedValue decimal(8,4) ,                                                        
    dTestPoints decimal(8,4),                                        
    dTestStandardErrorConfidenceIntervalLowerBound Decimal(16,4),                                                  
    dTestStandardErrorConfidenceIntervalUpperBound decimal(16,4) ,                
 iTaskObjectsCorrect int ,                
 iTaskObjectsNotAnswered int ,                
 iTaskObjectsWrong int ,                
 vResultAttribute nvarchar(MAX)               
 )                                                     
                  Declare @ResultSummary_SubSubject nvarchar(max) = (select t_TestDrive_Test_ResultSummary_SubSubject from openjson(@vAddData)with(          
    t_TestDrive_Test_ResultSummary_SubSubject nvarchar(max) as json          
    ))          
  -- insert into result summary sub subject details.                                        
  Insert t_testdrive_test_resultsummary_SubSubject                   ([uResultSummaryId]                                                  
   ,[iSubjectId]                                                  
   ,[dSubSubjectPoints]                                                  
   ,[iSubSubjectNumberOfTasks]                                                
   ,[dSubSubjectCorrectAnswerValue]                                                  
   ,[dSubSubjectWrongAnswerValue]                                                  
   ,[dSubSubjectNotAttemptedValue]                                                  
   ,[dSubSubjectStandardErrorConfidenceIntervalLowerBound]                                                 
   ,[dSubSubjectStandardErrorConfidenceIntervalUpperBound])             
     select @uNewResultSummaryId,iSubjectId                                                        
   ,dSubSubjectPoints                                                        
   ,iSubSubjectNumberOfTasks                                                        
   ,dSubSubjectCorrectAnswerValue                                                        
   ,dSubSubjectWrongAnswerValue                                                        
   ,dSubSubjectNotAttemptedValue                                                        
   ,dSubSubjectStandardErrorConfidenceIntervalLowerBound                                                  
   ,dSubSubjectStandardErrorConfidenceIntervalUpperBound                                                  
     from OPENJSON(@ResultSummary_SubSubject)                                                               
     WITH (                                        
    iSubjectId int,                                                          
    dSubSubjectPoints decimal(8,4)                                                         
    ,iSubSubjectNumberOfTasks int                                               
    ,dSubSubjectCorrectAnswerValue decimal(8,4)                                           
    ,dSubSubjectWrongAnswerValue decimal(8,4)                                                  
    ,dSubSubjectNotAttemptedValue decimal(8,4)                                   
    ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal(16,4)                                              
    ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal (16,4))                                                             
                                                    
  Declare @WrapperTest_TestForPupil nvarchar(max) = (select t_TestDrive_WrapperTest_TestForPupil from openjson(@vAddData)with(          
    t_TestDrive_WrapperTest_TestForPupil nvarchar(max) as json          
  ))          
          
    INSERT INTO [t_TestDrive_WrapperTest_TestForPupil]                  
  ([uWrapperTestId]                                              
  ,[uTestId]                                              
  ,[uPupilId]                                              
  ,[uClassId]                      ,[uCycleId]                                              
  ,[iCycleRepetition])                                              
    select uWrapperTestId, uTestId,@uPupilId,@uClassId,@uCycleId,iCycleRepetition                             
    from OPENJSON(@WrapperTest_TestForPupil)                                        
    WITH(                                                                 
  uWrapperTestId uniqueidentifier,                                                
  uTestId uniqueidentifier ,                            
  uPupilId uniqueidentifier,                                              
  uClassId uniqueidentifier ,                                              
  uCycleId uniqueidentifier ,                                              
  iCycleRepetition INT )                                              
                        
      -- return newly added data.                    
      print 'success returning data'                  
						   select(select uTestTokenId,                      
					vTestTokenNumber,                      
					uCycleId,                              
					T.uPupilId,                            
					T.uTestId,                             
					T.dtCreatedOn,                         
					T.uClassId,                            
					T.dtValidTill,                        
					T.dtModifiedOn,                        
					uParentTestId,                         
					--Te.iSubjectId,                        
					iCycleRepetition,                      
					isnull((select  e.uExecutionId,                      
					e.iTestStatusId,                      
					e.uTestTokenId,                    
					e.dtTestStart,                        
					e.dtTestEnd,                
					(select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                       
					From t_TestDrive_Test_Execution e                           
					where e.uTestTokenId = T.uTestTokenId                       
					 and t.uCycleId=@uCycleId                        
					for json path, include_null_values                          
					),'[]')  [TestExecution],                                 
                                    
					ISNULL((select r.uResultSummaryId,                          
					r.uExecutionId,                                             
					r.iTaskObjectsCorrect,                                      
					r.iTaskObjectsWrong,                                        
					r.iTaskObjectsNotAnswered,                                  
					r.vResultAttribute                                    
					From t_TestDrive_Test_Execution e                           
					inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                          
					where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                    
					for json path, include_null_values                      
					) , '[]') [TestResultSummary] ,                       
                                    
					isnull((select  s.uResultSummaryId,               
					s.iSubjectId,                                           
					s.iTaskObjectsCorrect,                                  
					s.iTaskObjectsWrong,                                    
					s.iTaskObjectsNotAnswered,              
					s.vResultAttribute                                    
					From t_TestDrive_Test_Execution e                       
					inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                      
					inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                          
					where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                    
					for json path, include_null_values                             
					),'[]')  [TestResultSummarySubSubject]                       
                                    
					for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                
					where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition  and uTestTokenId = @uNewTokenId
                             
   End Try                       
   Begin Catch        
  
  IF (select CURSOR_STATUS('global','Cur_Result'))>=-1  
  BEGIN  
   Close Cur_Result   
   DEALLOCATE Cur_Result  
  END   
  IF (select CURSOR_STATUS('global','Cur_ResultValues'))>=-1  
  BEGIN  
   Close Cur_ResultValues   
   DEALLOCATE Cur_ResultValues  
  END   
                            
   Select(  
    select '  ' NewTokenId, @uPupilId uPupilId,@uTestId uTestId,@uClassId uClassId,'Failure' MoveStatus ,str(ERROR_NUMBER())+ERROR_PROCEDURE()+str(ERROR_LINE())+ERROR_MESSAGE() Error for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult
  
     IF @@TRANCOUNT > 0                                                      
     Begin                                                      
   print 'On rollback'                                                      
   ROLLBACK TRANSACTION                                           
     End                                                      
    return                                                      
   End Catch                                                   
                                               
   Commit transaction                   
 end                      
else                      
 Begin                      
	   select(select uTestTokenId,                      
					vTestTokenNumber,                      
					uCycleId,                              
					T.uPupilId,                            
					T.uTestId,                             
					T.dtCreatedOn,                         
					T.uClassId,                            
					T.dtValidTill,                        
					T.dtModifiedOn,                        
					uParentTestId,                         
					--Te.iSubjectId,                        
					iCycleRepetition,                      
					isnull((select  e.uExecutionId,                      
					e.iTestStatusId,                      
					e.uTestTokenId,                    
					e.dtTestStart,                        
					e.dtTestEnd,                
					(select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                       
					From t_TestDrive_Test_Execution e                           
					where e.uTestTokenId = T.uTestTokenId                       
					 and t.uCycleId=@uCycleId                        
					for json path, include_null_values                          
					),'[]')  [TestExecution],                                 
                                    
					ISNULL((select r.uResultSummaryId,                          
					r.uExecutionId,                                             
					r.iTaskObjectsCorrect,                                      
					r.iTaskObjectsWrong,                                        
					r.iTaskObjectsNotAnswered,                                  
					r.vResultAttribute                                    
					From t_TestDrive_Test_Execution e                           
					inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                          
					where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                    
					for json path, include_null_values                      
					) , '[]') [TestResultSummary] ,                       
                                    
					isnull((select  s.uResultSummaryId,               
					s.iSubjectId,                                           
					s.iTaskObjectsCorrect,                                  
					s.iTaskObjectsWrong,                                    
					s.iTaskObjectsNotAnswered,              
					s.vResultAttribute                                    
					From t_TestDrive_Test_Execution e                       
					inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                      
					inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                          
					where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                    
					for json path, include_null_values                             
					),'[]')  [TestResultSummarySubSubject]                       
                                    
					for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                
					where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition                    
 End                     
end 


-- need to execute in recyclebin 
CREATE procedure Proc_Fusion_StandardTestProvider_AssignTestResultsToPupil                                                    
(                                                    
 @vAddData  nvarchar(max),                                                            
 @uCycleId uniqueidentifier,                                          
 @uClassId uniqueidentifier,                                          
 @uTestId uniqueidentifier,                                          
 @uPupilId uniqueidentifier,                                          
 @iCycleRepetition int                                          
)                                                    
AS                                                    
Begin                                               
 /********************************************************************************************                                                                    
 Created By:  Sanjay                                                                    
 Create Date:  02.07.2019              
 Description:  Insert the result from one pupil to another pupil. Move data                                              
                                                          
 ********************************************************************************************/                        
                       
 if(not exists(select * from t_TestDrive_Test_Token tt                         
 join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                        
 where uPupilId = @uPupilId and uTestId = @uTestId                                                     
    and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                    
 Begin                         
   Begin Transaction                                                    
   Begin Try                                                      
  -- delete the recieptent token if already exists.                                                
  if(exists(select uTesttokenId from t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                                                     
  and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                    
  Begin                                                     
   Delete  t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                    
   and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition                                                    
  End                                                    
            
                                               
   Declare @uNewTokenId uniqueidentifier             
                                                 
    set @uNewTokenId = NEWID()                                          
          print 'insertion starts'                                   
      ---Insert into token table                     
  INSERT INTO [t_TestDrive_Test_Token]                      
   ([uTestTokenId]                                                      
   ,[vTestTokenNumber]                                                      
   ,[uCycleId]                                                      
   ,[uPupilId]                                                      
   ,[uTestId]                                                      
   ,[dtCreatedOn]                                                      
   ,[uClassId]                                                      
   ,[uParentTestId]                                                      
   ,[iCycleRepetition])                                                      
   select @uNewTokenId,vTestTokenNumber,@uCycleId,@uPupilId,@uTestId,GETDATE(),@uClassId,uParentTestId,@iCycleRepetition                                                              
   from OPENJSON(@vAddData)WITH (                                            
   vTestTokenNumber nvarchar(20),         
   uParentTestId uniqueidentifier                                                           
   )                                           
print @uNewTokenId                             
                         
-- Insert into execution table. new id for each execution                                          
Declare @uNewExecutionId uniqueidentifier                                          
    set @uNewExecutionId = NEWID()                                          
                                              
Declare @TestExecutionJson nvarchar(max) = (select TestExecution from openjson(@vAddData)with(            
TestExecution nvarchar(max) as json            
))            
            
            
    insert dbo.t_testdrive_test_execution                    
   ([uExecutionId],[uTestTokenId],[dtTestStart],[dtTestEnd],[iSoundVolume],[iTestStatusId],[dBound1],[dBound2]                                                    
   ,[dStartProb],[dTestSubjectConstance],[dTestSubjectVariance],[iMaximumTasksToBeShown]                                                    
   ,[iMinimumTasksToBeShown],[dDifficultyUpperBound],[iPerfectNumber],[iLanguageId],[iTestSubjectId]                                                    
   ,[dStandardErrorConfidenceIntervalAlpha])                            
   select @uNewExecutionId,@uNewTokenId,dtTestStart,dtTestEnd,iSoundVolume,iTestStatusId,dBound1,dBound2                                      
     ,dStartProb,dTestSubjectConstance,dTestSubjectVariance,iMaximumTasksToBeShown                                                          
     ,iMinimumTasksToBeShown,dDifficultyUpperBound,iPerfectNumber,iLanguageId ,iTestSubjectId                                                    
     ,dStandardErrorConfidenceIntervalAlpha                                                    
   from OPENJSON(@TestExecutionJson)                                                                 
   WITH (                                     
    dtTestStart DateTime,                                                            
    dtTestEnd DateTime,                                                            
    iSoundVolume int,                                                               
    iTestStatusId int,                                                          
    dBound1 Decimal(8,4),                                                         
    dBound2 Decimal(8,4),                                                          
    dStartProb Decimal(8,4),                                          
    dTestSubjectConstance decimal(8,4),                                                          
    dTestSubjectVariance decimal(8,4) ,                                                          
    iMaximumTasksToBeShown int ,                                                          
    iMinimumTasksToBeShown int ,                                                          
    dDifficultyUpperBound decimal(8,4),                                                          
    iPerfectNumber int ,                                                          
    iLanguageId int ,                                                    
    iTestSubjectId int ,                                                    
    dStandardErrorConfidenceIntervalAlpha decimal(8,4))                                                      
                                            
 Declare @SubSubjectDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SubSubjectDetails from openjson(@vAddData)with(            
t_TestDrive_Test_Execution_SubSubjectDetails nvarchar(max) as json            
))            
            
            
    -- Insert into execution sub subject details table. new id for each entry                                          
    insert t_TestDrive_Test_Execution_SubSubjectDetails                    
   ([uExecutionSubSubjectDetailsId]                       
   ,[uExecutionId]                                                    
   ,[iSubjectId]                                                    
   ,[dConstance]                                  
   ,[dVariance])                                                    
   select NEWID(),@uNewExecutionId,iSubjectId,dConstance,dVariance                 
   from OPENJSON(@SubSubjectDetailsJson)                                                                 
   WITH (                                          
   iSubjectId int ,                  
   dConstance Decimal(8,4),                                                            
   dVariance Decimal(8,4))                                     
                                                  
    -- Insert into execution SystemDetails details table. new id for each entry                                          
       Declare @uNewExecutionSystemId uniqueidentifier                    
       set @uNewExecutionSystemId = NEWID()                                          
                     
    Declare @SystemDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SystemDetails from openjson(@vAddData)with(            
   t_TestDrive_Test_Execution_SystemDetails nvarchar(max) as json            
   ))            
            
       insert t_TestDrive_Test_Execution_SystemDetails                    
     ([uTestExecutionSystemDetailsId]                                                    
     ,[uExecutionId]                                                    
     ,[vIPAddress]                     
     ,[dtDatetimeOfLogin]                                
     ,[vBrowserInformation])                                                    
   select  NEWID(),@uNewExecutionId,vIPAddress,dtDatetimeOfLogin,vBrowserInformation                                                          
   from OPENJSON(@SystemDetailsJson)                                                                 
   WITH (                                              
   vIPAddress nvarchar(1000),                                                            
   dtDatetimeOfLogin datetime,                                                            
   vBrowserInformation nvarchar(max))                                          
                                             
       -- Insert into Result table. get allresult from xml. loops through and insert into table. for each entry new id is created                                             
       Declare @uResultId uniqueidentifier                         
        Declare @ResultJson nvarchar(max) = (select t_TestDrive_Test_Result from openjson(@vAddData)with(            
    t_TestDrive_Test_Result nvarchar(max) as json            
    ))            
                                       
       Declare Cur_Result Cursor for select uResultId from OPENJSON(@ResultJson)WITH ( uResultId uniqueidentifier)                                                        
       Open Cur_Result                                                        
    Fetch next from Cur_Result into @uResultId                                                        
       while(@@Fetch_Status <> -1)                    
  Begin                                          
   Declare @uNewResultId uniqueidentifier                                          
   set @uNewResultId = NEWID()                                          
                                            
   insert t_testdrive_test_result                    
   ([uResultId],[uExecutionId],[iPageId],[iTaskStatusId],[dtCreatedOn],[iTimesShown],[iDisplayedOrder],[dNextDifficulty]                                                    
   ,[cIsCalibratedActive],[dDifficultyBefore],[dDifficultyAfter],[iTaskSubjectId],[dTaskDifficulty],[iTimeTakenToAnswer]                                                    
   ,[vPageName],[iTimeAllocated],[iTaskTypeId],[iRoundNumber],[dTaskPercentage],[iTaskObjectsCorrect],[iTaskObjectsWrong]         
   ,[iTaskObjectsNotAnswered],[iTaskWeightage],[cIsSeparated],[vTaskResultAttribute],[vTaskElementResultAttribute])                                                       
                                                                      
    select @uNewResultId,@uNewExecutionId,iPageId,iTaskStatusId,dtCreatedOn,iTimesShown,iDisplayedOrder,dNextDifficulty,                                                    
    cIsCalibratedActive,dDifficultyBefore,dDifficultyAfter,iTaskSubjectId,dTaskDifficulty,iTimeTakenToAnswer                                              
    ,vPageName,iTimeAllocated,iTaskTypeId,iRoundNumber,dTaskPercentage,iTaskObjectsCorrect,iTaskObjectsWrong                                                          
    ,iTaskObjectsNotAnswered,iTaskWeightage,cIsSeparated,vTaskResultAttribute,vTaskElementResultAttribute                                                          
    from OPENJSON(@ResultJson)                                                                 
    WITH ( uResultId uniqueidentifier,                            
    iPageId int,                                          
    iTaskStatusId int,                                                            
    dtCreatedOn DateTime ,                                                            
    iTimesShown int ,                                                            
    iDisplayedOrder int,                                                            
    dNextDifficulty decimal(8,4),                                                          
    cIsCalibratedActive char(1) ,                                                            
    dDifficultyBefore decimal(8,4) ,                                                            
    dDifficultyAfter decimal(8,4) ,                                                          
    iTaskSubjectId int ,                      
    dTaskDifficulty decimal(8,4),                                                          
    iTimeTakenToAnswer int ,                                                          
    vPageName nvarchar(200) ,                                                          
    iTimeAllocated int ,                                         
    iTaskTypeId int ,                              
    iRoundNumber int ,                                                             
    dTaskPercentage Decimal(8,4) ,                                                          
    iTaskObjectsCorrect int ,                                                          
    iTaskObjectsWrong int ,                                                          
    iTaskObjectsNotAnswered int ,                                                          
    iTaskWeightage int ,                                                          
    cIsSeparated char(1) ,                
 vTaskResultAttribute nvarchar(max) ,                
 vTaskElementResultAttribute nvarchar(max))                                                          
    where uResultId = @uResultId                                                         
                         
   -- Insert into result values table. get all result for select result id and create new id for each for uresultvalue column.                                          
   -- and then insert orginal column values                                                     
   Declare @uResultValueId uniqueidentifier                  
   Declare @ResultValuesJson nvarchar(max) = (select t_TestDrive_Test_ResultValues from openjson(@vAddData)with(            
    t_TestDrive_Test_ResultValues nvarchar(max) as json            
    ))                                                  
   Declare Cur_ResultValues Cursor for select uResultValueId,uResultId from OPENJSON(@ResultValuesJson)                                                                 
   WITH ( uResultValueId nvarchar(100),    
   uResultId uniqueidentifier)                                                        
   where uResultId = @uResultId                      
   print @uResultId                    
   Open Cur_ResultValues                                                        
   fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                        
   While(@@fetch_Status <> -1)                                                        
    Begin                                  
     Declare @uNewResultValueId uniqueidentifier                                          
     set @uNewResultValueId = NEWID()                                          
                                                
     Declare @vElementType nvarchar(100)                                                        
     select @vElementType = vElementType from OPENJSON(@ResultValuesJson)                                          
     WITH ( uResultValueId nvarchar(100) ,                                                         
     vElementType nvarchar(200) )               
    where uResultValueId = @uResultValueId                                   
     --print @vElementType                                                
 if(upper(@vElementType) = 'TWORADIO' or upper(@vElementType) = 'DRAGDROP')                                          
     Begin                    
       Insert t_testdrive_test_resultvalues                                          
       ([uResultValueId]                                                    
       ,[uResultId]                                                    
       ,[iElementValueId]              
       ,[vAnswerValue]                                                    
       ,[iElementId]                                                    
       ,[vElementType]                                                    
       ,[vCorrectAnswer]                                                    
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex)                       
       select @uNewResultValueId,@uNewResultId,iElementValueId,convert(nvarchar(max),vAnswerValue),iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                            
       from OPENJSON(@ResultValuesJson)                                                                 
       WITH (uResultValueId uniqueidentifier,                                          
       iElementValueId int ,                                                            
       vAnswerValue nvarchar(max),                                                            
       iElementId int,                                     
       vElementType nvarchar(200),                                                          
       vCorrectAnswer nvarchar(200),                                                          
       iContainerId  int,                  
    iElementDisplayedOrder  int,                  
    iAnswerIndex  int)                             
       where uResultValueId = @uResultValueId                                   
       print @uResultValueId                                            
     End                                                        
       Else                                                        
     Begin                    
       Insert t_testdrive_test_resultvalues                                          
       ([uResultValueId]                                                    
       ,[uResultId]                                                    
       ,[iElementValueId]                                                    
       ,[vAnswerValue]                                                    
       ,[iElementId]                                                    
       ,[vElementType]                                                    
       ,[vCorrectAnswer]                                                    
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex  )                                                       
       select @uNewResultValueId,@uNewResultId,iElementValueId,vAnswerValue,iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                        
       from OPENJSON(@ResultValuesJson)                                                                 
       WITH (uResultValueId uniqueidentifier,                                                    
       iElementValueId int ,        
       vAnswerValue nvarchar(4000),                                                            
       iElementId int ,                                                          
       vElementType nvarchar(200) ,                                                          
       vCorrectAnswer nvarchar(200) ,                                                       
       iContainerId  int,                  
    iElementDisplayedOrder  int,                  
    iAnswerIndex int)                                                         
       where uResultValueId = @uResultValueId                                                    
     End                                                        
     fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                        
   End                                                          
   Close Cur_ResultValues                                                        
   DeAllocate Cur_ResultValues                                                        
   Fetch next from Cur_Result into @uResultId                   
  End                                                        
  Close Cur_Result                                                        
  Deallocate Cur_Result                                                    
                                             
  -- insert into result summary table. creates new id for each entry                                          
  Declare @uNewResultSummaryId uniqueidentifier                                          
  set @uNewResultSummaryId = NEWID()                                          
                                 Declare @ResultSummary nvarchar(max) = (select t_TestDrive_test_ResultSummary from openjson(@vAddData)with(            
    t_TestDrive_test_ResultSummary nvarchar(max) as json            
    ))            
  INSERT t_TestDrive_test_ResultSummary                    
   ([uResultSummaryId]                                              
   ,[uExecutionId]                                              
   ,[iTestNumberOfTasks]                                              
   ,[dTestCorrectAnswerValue]                                              
   ,[dTestWrongAnswerValue]                                              
   ,[dTestNotAttemptedValue]                                              
   ,[dTestPoints]                                              
   ,[dTestStandardErrorConfidenceIntervalLowerBound]                                              
   ,[dTestStandardErrorConfidenceIntervalUpperBound]                  
   ,[iTaskObjectsCorrect]                  
   ,[iTaskObjectsNotAnswered]                  
   ,[iTaskObjectsWrong]                  
   ,[vResultAttribute])                                                      
     select @uNewResultSummaryId, @uNewExecutionId, iTestNumberOfTasks, dTestCorrectAnswerValue,dTestWrongAnswerValue,                                          
     dTestNotAttemptedValue,dTestPoints,dTestStandardErrorConfidenceIntervalLowerBound,dTestStandardErrorConfidenceIntervalUpperBound,iTaskObjectsCorrect                  
   ,iTaskObjectsNotAnswered,iTaskObjectsWrong,vResultAttribute                                                  from OPENJSON(@ResultSummary)                                                                 
     WITH (                                          
    iTestNumberOfTasks int,                                          
    dTestCorrectAnswerValue decimal(8,4) ,                                                          
    dTestWrongAnswerValue decimal(8,4),                                                   
    dTestNotAttemptedValue decimal(8,4) ,                                                          
    dTestPoints decimal(8,4),                                          
    dTestStandardErrorConfidenceIntervalLowerBound Decimal(16,4),                                                    
    dTestStandardErrorConfidenceIntervalUpperBound decimal(16,4) ,                  
 iTaskObjectsCorrect int ,                  
 iTaskObjectsNotAnswered int ,                  
 iTaskObjectsWrong int ,                  
 vResultAttribute nvarchar(MAX)                 
 )                                                       
                  Declare @ResultSummary_SubSubject nvarchar(max) = (select t_TestDrive_Test_ResultSummary_SubSubject from openjson(@vAddData)with(            
    t_TestDrive_Test_ResultSummary_SubSubject nvarchar(max) as json            
    ))            
  -- insert into result summary sub subject details.                                          
  Insert t_testdrive_test_resultsummary_SubSubject                   ([uResultSummaryId]                                                    
   ,[iSubjectId]                                                    
   ,[dSubSubjectPoints]                                                    
   ,[iSubSubjectNumberOfTasks]                                                  
   ,[dSubSubjectCorrectAnswerValue]                                                    
   ,[dSubSubjectWrongAnswerValue]                                                    
   ,[dSubSubjectNotAttemptedValue]                                                    
   ,[dSubSubjectStandardErrorConfidenceIntervalLowerBound]                                                   
   ,[dSubSubjectStandardErrorConfidenceIntervalUpperBound])               
     select @uNewResultSummaryId,iSubjectId                                                          
   ,dSubSubjectPoints                                                          
   ,iSubSubjectNumberOfTasks                                                          
   ,dSubSubjectCorrectAnswerValue                                                          
   ,dSubSubjectWrongAnswerValue                                                          
   ,dSubSubjectNotAttemptedValue                                                          
   ,dSubSubjectStandardErrorConfidenceIntervalLowerBound                                                    
   ,dSubSubjectStandardErrorConfidenceIntervalUpperBound                                                    
     from OPENJSON(@ResultSummary_SubSubject)                                                                 
     WITH (                                          
    iSubjectId int,                                                            
    dSubSubjectPoints decimal(8,4)                                                           
    ,iSubSubjectNumberOfTasks int                                                 
    ,dSubSubjectCorrectAnswerValue decimal(8,4)                                             
    ,dSubSubjectWrongAnswerValue decimal(8,4)                                                    
    ,dSubSubjectNotAttemptedValue decimal(8,4)                                     
    ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal(16,4)                                                
    ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal (16,4))                                                               
                                                      
  Declare @WrapperTest_TestForPupil nvarchar(max) = (select t_TestDrive_WrapperTest_TestForPupil from openjson(@vAddData)with(            
    t_TestDrive_WrapperTest_TestForPupil nvarchar(max) as json            
  ))            
            
    INSERT INTO [t_TestDrive_WrapperTest_TestForPupil]                    
  ([uWrapperTestId]                                                
  ,[uTestId]                      
  ,[uPupilId]                                                
  ,[uClassId]                      ,[uCycleId]                                                
  ,[iCycleRepetition])                                                
    select uWrapperTestId, uTestId,@uPupilId,@uClassId,@uCycleId,iCycleRepetition                               
    from OPENJSON(@WrapperTest_TestForPupil)                                          
    WITH(                                                                   
  uWrapperTestId uniqueidentifier,                                                  
  uTestId uniqueidentifier ,                              
  uPupilId uniqueidentifier,                                                
  uClassId uniqueidentifier ,                                                
  uCycleId uniqueidentifier ,                                                
  iCycleRepetition INT )                                                
                          
      -- return newly added data.                      
      print 'success returning data'                    
         select(select uTestTokenId,                        
     vTestTokenNumber,                        
     uCycleId,                                
     T.uPupilId,                              
     T.uTestId,                               
     T.dtCreatedOn,                           
     T.uClassId,                              
     T.dtValidTill,                          
     T.dtModifiedOn,                          
     uParentTestId,                           
     --Te.iSubjectId,                          
     iCycleRepetition,                        
     isnull((select  e.uExecutionId,                        
     e.iTestStatusId,                        
     e.uTestTokenId,                      
     e.dtTestStart,                          
     e.dtTestEnd,                  
     (select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                         
     From t_TestDrive_Test_Execution e                             
     where e.uTestTokenId = T.uTestTokenId                         
      and t.uCycleId=@uCycleId                          
     for json path, include_null_values                            
     ),'[]')  [TestExecution],                                   
                                      
     ISNULL((select r.uResultSummaryId,                            
     r.uExecutionId,                                               
     r.iTaskObjectsCorrect,                                        
     r.iTaskObjectsWrong,                                          
     r.iTaskObjectsNotAnswered,                                    
     r.vResultAttribute                                      
     From t_TestDrive_Test_Execution e                             
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                            
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                      
     for json path, include_null_values                        
     ) , '[]') [TestResultSummary] ,                         
                                      
     isnull((select  s.uResultSummaryId,                 
     s.iSubjectId,                                             
     s.iTaskObjectsCorrect,                                    
     s.iTaskObjectsWrong,                                      
     s.iTaskObjectsNotAnswered,                
     s.vResultAttribute                                      
     From t_TestDrive_Test_Execution e                         
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                        
     inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                            
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                      
     for json path, include_null_values                               
     ),'[]')  [TestResultSummarySubSubject]                         
                                      
     for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                  
     where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition  and uTestTokenId = @uNewTokenId  
                               
   End Try                         
   Begin Catch          
    
  IF (select CURSOR_STATUS('global','Cur_Result'))>=-1    
  BEGIN    
   Close Cur_Result     
   DEALLOCATE Cur_Result    
  END     
  IF (select CURSOR_STATUS('global','Cur_ResultValues'))>=-1    
  BEGIN    
   Close Cur_ResultValues     
   DEALLOCATE Cur_ResultValues    
  END     
                              
   Select(    
    select '  ' NewTokenId, @uPupilId uPupilId,@uTestId uTestId,@uClassId uClassId,'Failure' MoveStatus ,str(ERROR_NUMBER())+ERROR_PROCEDURE()+str(ERROR_LINE())+ERROR_MESSAGE() Error for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult
  
    
     IF @@TRANCOUNT > 0                                                        
     Begin                                                        
   print 'On rollback'                                                        
   ROLLBACK TRANSACTION                                             
     End                                                        
    return                                                        
   End Catch                                                     
                                                 
   Commit transaction                     
 end                        
else                        
 Begin                        
    select(select uTestTokenId,                        
     vTestTokenNumber,                        
     uCycleId,                                
     T.uPupilId,                              
     T.uTestId,                               
     T.dtCreatedOn,                           
     T.uClassId,                              
     T.dtValidTill,                          
     T.dtModifiedOn,                          
     uParentTestId,                           
     --Te.iSubjectId,                          
     iCycleRepetition,                        
     isnull((select  e.uExecutionId,                        
     e.iTestStatusId,                        
     e.uTestTokenId,                      
     e.dtTestStart,                          
     e.dtTestEnd,                  
     (select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                         
     From t_TestDrive_Test_Execution e                             
     where e.uTestTokenId = T.uTestTokenId                         
      and t.uCycleId=@uCycleId                          
     for json path, include_null_values                            
     ),'[]')  [TestExecution],                                   
                                      
     ISNULL((select r.uResultSummaryId,                            
     r.uExecutionId,                                               
     r.iTaskObjectsCorrect,                                        
     r.iTaskObjectsWrong,                                          
     r.iTaskObjectsNotAnswered,                                    
     r.vResultAttribute                                      
     From t_TestDrive_Test_Execution e                             
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                            
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                      
     for json path, include_null_values                        
     ) , '[]') [TestResultSummary] ,                         
                                      
     isnull((select  s.uResultSummaryId,                 
     s.iSubjectId,                                             
     s.iTaskObjectsCorrect,                                    
     s.iTaskObjectsWrong,                                      
     s.iTaskObjectsNotAnswered,                
     s.vResultAttribute                                      
     From t_TestDrive_Test_Execution e                         
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                        
     inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                            
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                      
     for json path, include_null_values                               
     ),'[]')  [TestResultSummarySubSubject]                         
                                      
     for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                  
     where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition                      
 End                       
end 

-------------------------

CREATE PROC [dbo].[p_Extranet_Pupil_Module_GetSourceClassResults]       
(                          
 @uCycleId uniqueidentifier,          
 @uClassId uniqueidentifier,        
 @uPupilId uniqueidentifier                 
)                          
AS        
-- EXEC JProc_TestDrive_Pupil_MovePupils_GetSourceClassResults_New '689E7E70-A052-43C8-AFEA-7C11140A2C95','6FA2ED4B-C719-4B5F-BE8B-F0751E76D644',        
--'E8CE565A-3710-4E4E-8FC3-EA8322C6C091'                          
Begin      
    
 DECLARE @tempRecords TABLE    
(uExecutionId UNIQUEIDENTIFIER)    
        
 INSERT INTO @tempRecords        
 SELECT te.uExecutionId        
 FROM t_testdrive_test_token tt                         
 INNER JOIN t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId           
 WHERE         
 tt.uPupilId = @uPupilId         
 AND tt.uCycleId = @uCycleId         
    
         
 --Token table                        
 select (select tt.*       
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
from t_testdrive_test_token tt                      
WHERE tt.uPupilId = @uPupilId AND tt.uCycleId = @uCycleId AND tt.uClassId = @uClassId        
                       
 --t_TestDrive_Test_Execution                        
 select ( select          
TE.*          
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult          
from t_testdrive_test_execution TE       
inner join @tempRecords T on TE.uExecutionId  = T.uExecutionId    
                   
                       
 --t_TestDrive_Test_Execution_SubSubjectDetails                        
 select ( select         
TES.*     
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult          
from t_TestDrive_Test_Execution_SubSubjectDetails TES        
inner join @tempRecords T on TES.uExecutionId  = T.uExecutionId                 
                      
 --t_TestDrive_Test_Execution_SystemDetails                        
 select (  select         
 TES.*          
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
from t_TestDrive_Test_Execution_SystemDetails TES        
inner join @tempRecords T on TES.uExecutionId  = T.uExecutionId      
                       
 --t_TestDrive_Test_Result                        
  select (select         
  TTR.*         
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
from t_testdrive_test_result TTR         
inner join @tempRecords T on TTR.uExecutionId  = T.uExecutionId    
                    
 --t_testdrive_test_resultvalues                        
 select (select         
TTRV.*         
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
from t_testdrive_test_resultvalues TTRV where TTRV.uResultId in                          
 (                          
 select uresultid  from t_testdrive_test_result TTR         
inner join @tempRecords T on TTR.uExecutionId  = T.uExecutionId      
 )                          
                       
 --t_testdrive_test_resultsummary                        
 select ( select         
 TTRS.*       
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from         
t_testdrive_test_resultsummary TTRS    
inner join @tempRecords T on TTRS.uExecutionId  = T.uExecutionId    
    
    
                       
 --t_testdrive_test_resultsummary_SubSubject                        
 select ( select         
 TTRSS.*         
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
from t_testdrive_test_resultsummary_SubSubject TTRSS where TTRSS.uresultsummaryid in                          
 (                          
 select uresultsummaryid  from t_testdrive_test_resultsummary TTRS    
inner join @tempRecords T on TTRS.uExecutionId  = T.uExecutionId       
 )                        
                        
 -- wrapper table                       
 select ( select         
 TW.*      
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult         
FROM t_TestDrive_WrapperTest_TestForPupil TW        
where uClassId = @uClassId        
 and uPupilId = @uPupilId         
 and uCycleId = @uCycleId            
      
 End   


 ---------------------------

 CREATE PROCedure [dbo].[p_Extranet_Pupil_Module_InsertResultToDatabase]                  
(                                                      
  @vResultJSON  nvarchar(max),                
  @uCycleId uniqueidentifier,                
  @uClassId uniqueidentifier,                
  @uPupilId uniqueidentifier,                
  @cIsRecycleBinDataBase CHAR(1)                                          
)                                                      
AS                                                      
BEGIN                
-- EXEC JProc_TestDrive_Pupil_MovePupils_InsertTestResultsToPupil '{"TestTokens":[],"TestExecutions":[],"TestExecutionSubSubjectDetail":[],"TestExecutionSystemDetails":[],"TestResult":[],"TestResultValues":[],"TestResultSummary":[],"TestResultSubSubjectSummary":[],"WrapperTest":[]}',                
-- 'b9dadda2-81f4-4d8c-bc98-0763a16d79c5','ab6b68a2-83ac-49a8-b5d9-ad62315f4b7a','65821287-E029-439B-9B9A-8DA7B848170B','N'                
DECLARE @Message NVARCHAR(MAX);       
DECLARE @blnCommit int     
set @blnCommit = 1                
 BEGIN TRANSACTION;                
 BEGIN TRY                
  DECLARE @uTestTokenId UNIQUEIDENTIFIER;                
                 
  DECLARE CURSOR_TestTokenData CURSOR FOR                
  SELECT uTestTokenId FROM OPENJSON(@vResultJSON,'$.TestTokens')                
  WITH ( uTestTokenId UNIQUEIDENTIFIER '$.uTestTokenId' )                
                
  OPEN CURSOR_TestTokenData                                                    
  FETCH NEXT FROM CURSOR_TestTokenData into @uTestTokenId                
  WHILE(@@FETCH_STATUS <> -1)                                               
  BEGIN                
                  
   IF EXISTS( SELECT * FROM t_TestDrive_Test_Token WHERE uTestTokenId = @uTestTokenId) AND @cIsRecycleBinDataBase = 'N'                
    BEGIN                
     UPDATE t_TestDrive_Test_Token                 
     SET uClassId = @uClassId                
     WHERE uTestTokenId = @uTestTokenId                
    END                
   ELSE                
    BEGIN                
                    
     INSERT INTO t_TestDrive_Test_Token( uTestTokenId                
      ,vTestTokenNumber                
      ,uCycleId                
      ,uPupilId                
      ,uTestId                
      ,dtCreatedOn                
      ,uClassId                
      ,uParentTestId                
      ,iCycleRepetition                
      ,iLoginProviderId                
      ,dtValidTill                
      ,cIsActive                
      ,dtValidFrom                
      ,dtValidTo                
      ,iSubjectId                
      ,cIsPracticeTest                
      ,dtModifiedOn)             
     SELECT                 
       uTestTokenId                
      ,vTestTokenNumber                
      ,uCycleId                
      ,uPupilId                
      ,uTestId                
      ,dtCreatedOn                
      ,@uClassId                
      ,uParentTestId                
      ,iCycleRepetition                
      ,iLoginProviderId                
      ,dtValidTill                
      ,cIsActive                
      ,dtValidFrom                
      ,dtValidTo                
      ,iSubjectId                
      ,cIsPracticeTest                
      ,dtModifiedOn --Not Present in Active DB                
     FROM                 
     OPENJSON(@vResultJSON,'$.TestTokens')                
     WITH(                
       uTestTokenId uniqueidentifier                
      ,vTestTokenNumber nvarchar(26)                
      ,uCycleId uniqueidentifier                
      ,uPupilId uniqueidentifier                
      ,uTestId uniqueidentifier                
      ,dtCreatedOn smalldatetime                
      ,uClassId uniqueidentifier                
      ,uParentTestId uniqueidentifier                
      ,iCycleRepetition int                
      ,iLoginProviderId int                
      ,dtValidTill datetime                
  ,cIsActive char(1)                
      ,dtValidFrom datetime                
      ,dtValidTo datetime                
      ,iSubjectId int                
      ,cIsPracticeTest char(1)                
      ,dtModifiedOn datetime                
     )                
     WHERE uTestTokenId = @uTestTokenId;            
                
     INSERT INTO t_TestDrive_Test_Execution(uExecutionId                
      ,uTestTokenId                
      ,dtTestStart                 
      ,dtTestEnd                 
      ,iSoundVolume                 
      ,iTestStatusId                 
      ,dBound1                 
      ,dBound2                 
      ,dStartProb                 
      ,dTestSubjectConstance                 
      ,dTestSubjectVariance                 
      ,iMaximumTasksToBeShown                 
      ,iMinimumTasksToBeShown                 
      ,dDifficultyUpperBound                 
      ,iPerfectNumber                 
      ,iLanguageId                 
      ,iTestSubjectId                 
      ,dStandardErrorConfidenceIntervalAlpha                 
      ,uElementFormulaAttributeTemplateId                 
      ,uResultAttributeGroupId      
   ,vAdaptivePropertiesJson         
      ,iAlgorithmId               
      ,iTaskCountDisplayed       
      ,iTotalEffectiveTimeTaken       
      ,dtLastTaskAnsweredOn       
   )             
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestExecutions')                
     WITH (                
       uExecutionId uniqueidentifier                
      ,uTestTokenId uniqueidentifier                
      ,dtTestStart datetime                
      ,dtTestEnd datetime                
      ,iSoundVolume int                
      ,iTestStatusId int                
      ,dBound1 decimal                
      ,dBound2 decimal                
      ,dStartProb decimal                
      ,dTestSubjectConstance decimal                
      ,dTestSubjectVariance decimal                
      ,iMaximumTasksToBeShown int                
      ,iMinimumTasksToBeShown int                
      ,dDifficultyUpperBound decimal                
      ,iPerfectNumber int                
      ,iLanguageId int                
      ,iTestSubjectId int                
      ,dStandardErrorConfidenceIntervalAlpha decimal                
      ,uElementFormulaAttributeTemplateId uniqueidentifier                
      ,uResultAttributeGroupId uniqueidentifier                
      ,vAdaptivePropertiesJson nvarchar(MAX)                
      ,iAlgorithmId int                
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1                
      ,iTaskCountDisplayed int                
      ,iTotalEffectiveTimeTaken int                
      ,dtLastTaskAnsweredOn datetime                
     -- Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1                
 )               
     WHERE uTestTokenId = @uTestTokenId;                
                
     DECLARE @uExecutionId UNIQUEIDENTIFIER ;                
     SELECT @uExecutionId = uExecutionId FROM                 
     OPENJSON(@vResultJSON,'$.TestExecutions')                
     WITH ( uExecutionId uniqueidentifier, uTestTokenId uniqueidentifier)                
     WHERE uTestTokenId = @uTestTokenId;                
                
     INSERT INTO t_TestDrive_Test_Execution_SubSubjectDetails( uExecutionSubSubjectDetailsId                 
      ,uExecutionId                 
      ,iSubjectId                 
      ,dConstance                 
      ,dVariance)               
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestExecutionSubSubjectDetail')                
     WITH (                
       uExecutionSubSubjectDetailsId uniqueidentifier                
      ,uExecutionId uniqueidentifier                
      ,iSubjectId int                
      ,dConstance decimal                
      ,dVariance decimal                
     )                
     WHERE uExecutionId = @uExecutionId;        
                
     INSERT INTO t_TestDrive_Test_Execution_SystemDetails(      
   uTestExecutionSystemDetailsId                 
      ,uExecutionId                 
      ,vIPAddress       
      ,dtDatetimeOfLogin                 
      ,vBrowserInformation       
      ,vBrowser       
      ,vBrowserVersion       
      ,vOs       
  )              
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestExecutionSystemDetails')                
     WITH (                
       uTestExecutionSystemDetailsId uniqueidentifier                
      ,uExecutionId uniqueidentifier                
      ,vIPAddress nvarchar(50)                
      ,dtDatetimeOfLogin datetime                
      ,vBrowserInformation nvarchar(MAX)                
      ,vBrowser nvarchar(200)                
      ,vBrowserVersion nvarchar(200)                
      ,vOs nvarchar(200)                
     )                
     WHERE uExecutionId = @uExecutionId;                
                
     INSERT INTO t_TestDrive_Test_Result(      
   uResultId                 
      ,uExecutionId                 
      ,iPageId                 
      ,iTaskStatusId                 
      ,dtCreatedOn                 
      ,iTimesShown                 
      ,iDisplayedOrder                 
      ,dNextDifficulty                 
      ,cIsCalibratedActive       
      ,dDifficultyBefore                 
      ,dDifficultyAfter                 
      ,iTaskSubjectId                 
      ,dTaskDifficulty                 
      ,iTimeTakenToAnswer                 
      ,vPageName       
      ,iTimeAllocated                 
      ,iTaskTypeId                 
      ,iRoundNumber                 
      ,dTaskPercentage                 
      ,iTaskObjectsCorrect                 
      ,iTaskObjectsWrong                 
      ,iTaskObjectsNotAnswered                 
      ,iTaskWeightage                 
      ,cIsSeparated           
      ,cHasTaskBeenDisplayed       
      ,iAttemptsToSolveTaskCorrectly                
      ,cIsDataStoragePlaceHolder              
      ,iParentTaskId                 
      ,iSuperGroupTimeAllocated                 
      ,vTaskResultAttribute       
      ,vTaskElementResultAttribute       
    ,vTaskDifficulty        
      ,iCategoryId       
      ,iCategoryCompetencyId           
   ,vElementAnswerJson       
      ,dtModifiedOn       
  )            
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResult')                
     WITH (                
       uResultId uniqueidentifier                
      ,uExecutionId uniqueidentifier                
      ,iPageId int                
      ,iTaskStatusId int                
      ,dtCreatedOn datetime                
      ,iTimesShown int                
      ,iDisplayedOrder int                
      ,dNextDifficulty decimal                
      ,cIsCalibratedActive char(1)                
      ,dDifficultyBefore decimal                
      ,dDifficultyAfter decimal                
      ,iTaskSubjectId int                
      ,dTaskDifficulty decimal                
      ,iTimeTakenToAnswer int                
      ,vPageName nvarchar(200)                
      ,iTimeAllocated int                
      ,iTaskTypeId int                
      ,iRoundNumber int                
      ,dTaskPercentage decimal                
      ,iTaskObjectsCorrect int                
      ,iTaskObjectsWrong int                
      ,iTaskObjectsNotAnswered int                
      ,iTaskWeightage int                
      ,cIsSeparated char(1)                
      ,cHasTaskBeenDisplayed char(1)                
      ,iAttemptsToSolveTaskCorrectly int                
      ,cIsDataStoragePlaceHolder char(1)                
      ,iParentTaskId int                
      ,iSuperGroupTimeAllocated int                
      ,vTaskResultAttribute nvarchar(MAX)                
      ,vTaskElementResultAttribute nvarchar(MAX)                
      ,vTaskDifficulty nvarchar(MAX)                
      ,iCategoryId int                
      ,iCategoryCompetencyId int            
   ,vElementAnswerJson nvarchar(max)            
      ,dtModifiedOn dateTime            
     )                     
     WHERE uExecutionId = @uExecutionId;                
                
     CREATE TABLE #tempResultIds( uResultId UNIQUEIDENTIFIER,uExecutionId uniqueidentifier );                
     INSERT INTO #tempResultIds(uResultId ,uExecutionId )              
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResult')                
     WITH (uResultId uniqueidentifier,uExecutionId uniqueidentifier)                
     WHERE uExecutionId = @uExecutionId;                
                    
     INSERT INTO t_TestDrive_Test_ResultValues(      
  uResultValueId                 
      ,uResultId                 
      ,iElementValueId                 
      ,vAnswerValue       
      ,iElementId                 
      ,vElementType       
      ,vCorrectAnswer      
      ,iContainerId                 
      ,iElementDisplayedOrder                 
      ,iAnswerIndex                 
      ,iObjectStatus                 
      ,iAttemptsToSolveTaskCorrectly                 
      ,cIsCorrectAnswer          
      ,dMarkerValue       
  )               
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResultValues')                
     WITH (                
       uResultValueId uniqueidentifier                
      ,uResultId uniqueidentifier                
      ,iElementValueId int                
      ,vAnswerValue NVARCHAR(MAX)                
      ,iElementId int                
      ,vElementType nvarchar(100)                
      ,vCorrectAnswer nvarchar(MAX)                
      ,iContainerId int                
      ,iElementDisplayedOrder int                
      ,iAnswerIndex int                
      ,iObjectStatus int                
      ,iAttemptsToSolveTaskCorrectly int                
      ,cIsCorrectAnswer char(1)             
      ,dMarkerValue decimal                
     )                
     WHERE uResultId in (SELECT uResultId FROM #tempResultIds);                
                
     INSERT INTO t_TestDrive_Test_ResultSummary (      
  uResultSummaryId                 
      ,uExecutionId                 
      ,iTestNumberOfTasks                 
      ,dTestCorrectAnswerValue                 
      ,dTestWrongAnswerValue                 
      ,dTestNotAttemptedValue                 
      ,dTestPoints                 
      ,dTestStandardErrorConfidenceIntervalLowerBound                 
      ,dTestStandardErrorConfidenceIntervalUpperBound                 
      ,iTaskObjectsCorrect                 
      ,iTaskObjectsWrong                 
      ,iTaskObjectsNotAnswered                 
      ,vResultAttribute       
  )               
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResultSummary')                
     WITH(                
       uResultSummaryId uniqueidentifier                
      ,uExecutionId uniqueidentifier                
      ,iTestNumberOfTasks int                
      ,dTestCorrectAnswerValue decimal                
      ,dTestWrongAnswerValue decimal                
      ,dTestNotAttemptedValue decimal                
      ,dTestPoints decimal                
      ,dTestStandardErrorConfidenceIntervalLowerBound decimal                
      ,dTestStandardErrorConfidenceIntervalUpperBound decimal                
      ,iTaskObjectsCorrect int                
      ,iTaskObjectsWrong int                
      ,iTaskObjectsNotAnswered int                
      ,vResultAttribute nvarchar(MAX)                
     )                
     WHERE uExecutionId = @uExecutionId;                
                
     CREATE TABLE #tempResultSummaryIds( uResultSummaryId UNIQUEIDENTIFIER,uExecutionId uniqueidentifier );                
     INSERT INTO #tempResultSummaryIds(uResultSummaryId,uExecutionId)         
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResultSummary')        
     WITH (uResultSummaryId uniqueidentifier,uExecutionId uniqueidentifier)                
     WHERE uExecutionId = @uExecutionId;                
                
     INSERT INTO t_TestDrive_Test_ResultSummary_SubSubject(      
    uResultSummaryId                 
      ,iSubjectId                 
      ,dSubSubjectPoints                 
      ,iSubSubjectNumberOfTasks                 
      ,dSubSubjectCorrectAnswerValue                 
      ,dSubSubjectWrongAnswerValue                 
      ,dSubSubjectNotAttemptedValue                 
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound                 
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound                 
      ,iTaskObjectsCorrect                 
    ,iTaskObjectsWrong                 
      ,iTaskObjectsNotAnswered                 
      ,vResultAttribute          
      ,cIsSurveySubject       
  )               
     SELECT * FROM                 
     OPENJSON(@vResultJSON,'$.TestResultSubSubjectSummary')                
     WITH(                
       uResultSummaryId uniqueidentifier                
      ,iSubjectId int                
      ,dSubSubjectPoints decimal                
      ,iSubSubjectNumberOfTasks int                
      ,dSubSubjectCorrectAnswerValue decimal                
      ,dSubSubjectWrongAnswerValue decimal                
      ,dSubSubjectNotAttemptedValue decimal                
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal                
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal                
      ,iTaskObjectsCorrect int                
      ,iTaskObjectsWrong int                
      ,iTaskObjectsNotAnswered int                
      ,vResultAttribute nvarchar(MAX)                
      ,cIsSurveySubject char(1)                
     )                
     WHERE uResultSummaryId IN (SELECT uResultSummaryId FROM #tempResultSummaryIds);                
                
     DROP TABLE #tempResultIds;                
     DROP TABLE #tempResultSummaryIds;                
    END                
                
   FETCH NEXT FROM CURSOR_TestTokenData INTO @uTestTokenId                          
                 
  END                
  CLOSE CURSOR_TestTokenData                
  DEALLOCATE CURSOR_TestTokenData                
                
  IF EXISTS(SELECT * FROM t_TestDrive_WrapperTest_TestForPupil WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId)                
   BEGIN                
    UPDATE t_TestDrive_WrapperTest_TestForPupil                 
    SET uClassId = @uClassId                
    WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId                
   END                
  ELSE                
   BEGIN                
    INSERT INTO t_TestDrive_WrapperTest_TestForPupil(      
   uWrapperTestId                
     ,uTestId                
     ,uPupilId                
     ,uClassId                
     ,uCycleId                
     ,iCycleRepetition        
 )             
    SELECT                 
      uWrapperTestId                
     ,uTestId                
     ,uPupilId                
     ,@uClassId                
     ,uCycleId                
     ,iCycleRepetition                
     FROM                 
    OPENJSON(@vResultJSON,'$.WrapperTest')                
    WITH (                
      uWrapperTestId uniqueidentifier                
     ,uTestId uniqueidentifier                
     ,uPupilId uniqueidentifier                
     ,uClassId uniqueidentifier                
     ,uCycleId uniqueidentifier                
     ,iCycleRepetition int                
    )                
    WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId                
   END                
                
  SET @Message = 'Success'                
 END TRY                
 BEGIN CATCH                
 print 'error' + ERROR_MESSAGE() ;        
 print ERROR_LINE();        
   SET @Message = ERROR_MESSAGE();                
   ROLLBACK TRANSACTION          
   set @blnCommit = 0          
 END CATCH                
  if(@blnCommit = 1)    
  BEGIN    
   COMMIT TRANSACTION;                
   END         
                
 SELECT (SELECT @Message as vMessage for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                     
END   


---------------------

CREATE PROCedure [dbo].[p_Extranet_Pupil_Module_ClearTestResultOfPupil]         
(                                    
 @uPupilId uniqueidentifier,                                      
 @uCycleId uniqueidentifier,                                      
 @uClassId uniqueidentifier,                                             
 @cIsDeleteToken char(1)                    
)                                        
AS                                         
Begin         
                                     
 DECLARE @tempRecords TABLE    
(uExecutionId UNIQUEIDENTIFIER)    
     
        
 INSERT INTO @tempRecords        
 SELECT te.uExecutionId        
 FROM t_testdrive_test_token tt                         
 INNER JOIN t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId           
 WHERE         
 tt.uPupilId = @uPupilId       
 AND tt.uCycleId = @uCycleId         
 AND tt.uClassId = @uClassId        
          
  Declare @uTestTokenId uniqueidentifier              
                                 
                                                 
    delete  from t_TestDrive_Test_ResultSummary_SubSubject where uresultsummaryid in                    
    (                                        
  select  uresultsummaryid from t_testdrive_test_resultsummary where   uExecutionId                    
  IN (SELECT uExecutionId FROM @tempRecords)        
    )                                          
                                               
    delete  from t_testdrive_test_resultsummary where uExecutionId                         
  IN (SELECT uExecutionId FROM @tempRecords)        
                                               
    delete  from t_testdrive_test_resultvalues where uresultid in                    
    (                                        
      select  uresultid from t_testdrive_test_result where   uExecutionId                      
  IN (SELECT uExecutionId FROM @tempRecords)        
    )            
           
 delete  from t_TestDrive_Test_ResultElementData where uresultid in                    
    (                                        
      select  uresultid from t_testdrive_test_result where   uExecutionId                        
  IN (SELECT uExecutionId FROM @tempRecords)        
    )                                          
                                               
    delete  from t_testdrive_test_result where   uExecutionId                      
  IN (SELECT uExecutionId FROM @tempRecords)        
                                                
    delete  from t_TestDrive_Test_Execution_SubSubjectDetails where  uExecutionId                        
  IN (SELECT uExecutionId FROM @tempRecords)        
                       
    delete  from t_TestDrive_Test_Execution_SystemDetails where  uExecutionId                       
  IN (SELECT uExecutionId FROM @tempRecords)        
                                                               
    delete  from t_testdrive_test_execution where uExecutionId                         
  IN (SELECT uExecutionId FROM @tempRecords)        
                    
 if(@cIsDeleteToken = 'Y')                    
 Begin                    
   delete  from t_TestDrive_Test_Token where uPupilId = @uPupilId         
                                       
        and uCycleId = @uCycleId and uClassId = @uClassId          
          
 End                       
 --end                               
 if ( exists ( select * from t_TestDrive_WrapperTest_TestForPupil                    
   where     uPupilId = @uPupilId         
                                    
   and uCycleId = @uCycleId                               
   and uClassId =  @uClassId                         
     
   ))                                         
 Begin                                     
  Delete t_TestDrive_WrapperTest_TestForPupil where uPupilId = @uPupilId         
                                      
  and uCycleId = @uCycleId                               
  and uClassId =  @uClassId                            
                   
 End                      
  DROP TABLE #tempRecords          
 select( Select @@ROWCOUNT as RowsAffected for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult             
 end   

 ------------------------------

 CREATE PROCEDURE [dbo].[p_Extranet_Pupil_Module_InsertMergedResultToDatabase]              
(                                                  
  @vResultJSON  nvarchar(max),            
  @uCycleId uniqueidentifier,            
  @uClassId uniqueidentifier,            
  @uSourcePupilId uniqueidentifier,            
  @uTargetPupilId uniqueidentifier,            
  @cIsRecycleBinDataBase CHAR(1)                                      
)                                                  
AS                                                  
BEGIN            
DECLARE @Message NVARCHAR(MAX);            
 BEGIN TRANSACTION            
 BEGIN TRY            
  DECLARE @uTestTokenId UNIQUEIDENTIFIER;            
             
  DECLARE CURSOR_TestTokenData CURSOR FOR            
  SELECT uTestTokenId FROM OPENJSON(@vResultJSON,'$.TestTokens')            
  WITH ( uTestTokenId UNIQUEIDENTIFIER '$.uTestTokenId' )            
            
  OPEN CURSOR_TestTokenData                                                
  FETCH NEXT FROM CURSOR_TestTokenData into @uTestTokenId            
  WHILE(@@FETCH_STATUS <> -1)                                           
  BEGIN            
              
   IF EXISTS( SELECT * FROM t_TestDrive_Test_Token WHERE uTestTokenId = @uTestTokenId) AND @cIsRecycleBinDataBase = 'N'            
    BEGIN            
     UPDATE t_TestDrive_Test_Token             
     SET uClassId = @uClassId, uPupilId = @uTargetPupilId            
     WHERE uTestTokenId = @uTestTokenId            
    END            
   ELSE            
    BEGIN            
                
     INSERT INTO t_TestDrive_Test_Token ( uTestTokenId            
      ,vTestTokenNumber            
      ,uCycleId            
      ,uPupilId            
      ,uTestId            
      ,dtCreatedOn            
      ,uClassId            
      ,uParentTestId            
      ,iCycleRepetition            
      ,iLoginProviderId            
      ,dtValidTill            
      ,cIsActive            
      ,dtValidFrom            
      ,dtValidTo            
      ,iSubjectId            
      ,cIsPracticeTest            
      ,dtModifiedOn)           
     SELECT             
       uTestTokenId            
      ,vTestTokenNumber            
      ,uCycleId            
      ,@uTargetPupilId            
      ,uTestId            
      ,dtCreatedOn            
      ,@uClassId            
      ,uParentTestId            
      ,iCycleRepetition            
      ,iLoginProviderId            
      ,dtValidTill            
      ,cIsActive            
      ,dtValidFrom            
      ,dtValidTo            
      ,iSubjectId            
      ,cIsPracticeTest            
      ,dtModifiedOn --Not Present in Active DB            
     FROM             
     OPENJSON(@vResultJSON,'$.TestTokens')            
     WITH(            
       uTestTokenId uniqueidentifier            
      ,vTestTokenNumber nvarchar(26)            
      ,uCycleId uniqueidentifier                  
      ,uTestId uniqueidentifier            
      ,dtCreatedOn smalldatetime            
      ,uClassId uniqueidentifier            
      ,uParentTestId uniqueidentifier            
      ,iCycleRepetition int            
      ,iLoginProviderId int            
      ,dtValidTill datetime            
      ,cIsActive char(1)            
      ,dtValidFrom datetime            
      ,dtValidTo datetime            
      ,iSubjectId int            
      ,cIsPracticeTest char(1)            
      ,dtModifiedOn datetime            
     )            
     WHERE uTestTokenId = @uTestTokenId;            
            
     INSERT INTO t_TestDrive_Test_Execution (uExecutionId             
      ,uTestTokenId             
      ,dtTestStart             
      ,dtTestEnd             
      ,iSoundVolume             
      ,iTestStatusId             
      ,dBound1             
      ,dBound2             
      ,dStartProb             
      ,dTestSubjectConstance             
      ,dTestSubjectVariance             
      ,iMaximumTasksToBeShown             
      ,iMinimumTasksToBeShown             
      ,dDifficultyUpperBound             
      ,iPerfectNumber             
      ,iLanguageId             
      ,iTestSubjectId             
      ,dStandardErrorConfidenceIntervalAlpha         
      ,uElementFormulaAttributeTemplateId             
      ,uResultAttributeGroupId             
      ,vAdaptivePropertiesJson    
      ,iAlgorithmId             
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1            
      ,iTaskCountDisplayed             
      ,iTotalEffectiveTimeTaken             
      ,dtLastTaskAnsweredOn )           
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestExecutions')            
     WITH (            
       uExecutionId uniqueidentifier            
      ,uTestTokenId uniqueidentifier            
      ,dtTestStart datetime            
      ,dtTestEnd datetime            
      ,iSoundVolume int            
      ,iTestStatusId int            
      ,dBound1 decimal            
      ,dBound2 decimal            
      ,dStartProb decimal            
      ,dTestSubjectConstance decimal            
      ,dTestSubjectVariance decimal            
      ,iMaximumTasksToBeShown int            
      ,iMinimumTasksToBeShown int            
      ,dDifficultyUpperBound decimal            
      ,iPerfectNumber int            
      ,iLanguageId int            
      ,iTestSubjectId int            
      ,dStandardErrorConfidenceIntervalAlpha decimal            
      ,uElementFormulaAttributeTemplateId uniqueidentifier            
      ,uResultAttributeGroupId uniqueidentifier            
      ,vAdaptivePropertiesJson nvarchar(MAX)            
      ,iAlgorithmId int            
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1            
      ,iTaskCountDisplayed int            
      ,iTotalEffectiveTimeTaken int            
      ,dtLastTaskAnsweredOn datetime            
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1        
               
     )            
     WHERE uTestTokenId = @uTestTokenId;            
            
     DECLARE @uExecutionId UNIQUEIDENTIFIER ;            
     SELECT @uExecutionId = uExecutionId FROM             
     OPENJSON(@vResultJSON,'$.TestExecutions')            
     WITH ( uExecutionId uniqueidentifier, uTestTokenId uniqueidentifier)            
     WHERE uTestTokenId = @uTestTokenId;            
            
     INSERT INTO t_TestDrive_Test_Execution_SubSubjectDetails (uExecutionSubSubjectDetailsId             
      ,uExecutionId             
      ,iSubjectId             
      ,dConstance             
      ,dVariance  )        
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestExecutionSubSubjectDetail')            
     WITH (            
       uExecutionSubSubjectDetailsId uniqueidentifier            
      ,uExecutionId uniqueidentifier            
      ,iSubjectId int            
      ,dConstance decimal            
      ,dVariance decimal            
     )            
     WHERE uExecutionId = @uExecutionId;            
            
     INSERT INTO t_TestDrive_Test_Execution_SystemDetails  (uTestExecutionSystemDetailsId             
      ,uExecutionId             
      ,vIPAddress          
      ,dtDatetimeOfLogin             
      ,vBrowserInformation     
      ,vBrowser        
      ,vBrowserVersion          
      ,vOs )          
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestExecutionSystemDetails')            
     WITH (            
       uTestExecutionSystemDetailsId uniqueidentifier            
      ,uExecutionId uniqueidentifier            
      ,vIPAddress nvarchar(50)            
      ,dtDatetimeOfLogin datetime            
      ,vBrowserInformation nvarchar(MAX)            
      ,vBrowser nvarchar(200)            
      ,vBrowserVersion nvarchar(200)            
      ,vOs nvarchar(200)            
     )            
     WHERE uExecutionId = @uExecutionId;            
            
     INSERT INTO t_TestDrive_Test_Result  (    
  uResultId             
     ,uExecutionId             
      ,iPageId             
      ,iTaskStatusId             
      ,dtCreatedOn             
      ,iTimesShown             
      ,iDisplayedOrder             
      ,dNextDifficulty             
      ,cIsCalibratedActive       
      ,dDifficultyBefore             
      ,dDifficultyAfter             
      ,iTaskSubjectId             
      ,dTaskDifficulty             
      ,iTimeTakenToAnswer             
      ,vPageName          
      ,iTimeAllocated             
      ,iTaskTypeId             
      ,iRoundNumber             
      ,dTaskPercentage             
      ,iTaskObjectsCorrect             
      ,iTaskObjectsWrong             
      ,iTaskObjectsNotAnswered             
      ,iTaskWeightage             
      ,cIsSeparated     
      ,cHasTaskBeenDisplayed           
      ,iAttemptsToSolveTaskCorrectly             
      ,cIsDataStoragePlaceHolder             
      ,iParentTaskId             
      ,iSuperGroupTimeAllocated             
      ,vTaskResultAttribute             
      ,vTaskElementResultAttribute       
      ,vTaskDifficulty      
      ,iCategoryId             
      ,iCategoryCompetencyId    )          
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResult')            
     WITH (            
       uResultId uniqueidentifier            
      ,uExecutionId uniqueidentifier            
      ,iPageId int            
      ,iTaskStatusId int            
      ,dtCreatedOn datetime            
      ,iTimesShown int            
      ,iDisplayedOrder int            
      ,dNextDifficulty decimal            
      ,cIsCalibratedActive char(1)            
      ,dDifficultyBefore decimal            
      ,dDifficultyAfter decimal            
      ,iTaskSubjectId int            
      ,dTaskDifficulty decimal            
      ,iTimeTakenToAnswer int            
      ,vPageName nvarchar(200)            
      ,iTimeAllocated int            
      ,iTaskTypeId int            
      ,iRoundNumber int            
      ,dTaskPercentage decimal            
      ,iTaskObjectsCorrect int            
      ,iTaskObjectsWrong int            
      ,iTaskObjectsNotAnswered int            
      ,iTaskWeightage int            
      ,cIsSeparated char(1)            
      ,cHasTaskBeenDisplayed char(1)            
      ,iAttemptsToSolveTaskCorrectly int            
      ,cIsDataStoragePlaceHolder char(1)            
      ,iParentTaskId int            
      ,iSuperGroupTimeAllocated int            
      ,vTaskResultAttribute nvarchar(MAX)            
      ,vTaskElementResultAttribute nvarchar(MAX)            
      ,vTaskDifficulty nvarchar(MAX)            
      ,iCategoryId int            
      ,iCategoryCompetencyId int            
     )            
     WHERE uExecutionId = @uExecutionId;            
            
     CREATE TABLE #tempResultIds( uResultId UNIQUEIDENTIFIER );            
     INSERT INTO #tempResultIds            
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResult')            
     WITH (uResultId uniqueidentifier,uExecutionId uniqueidentifier)            
     WHERE uExecutionId = @uExecutionId;            
                
     INSERT INTO t_TestDrive_Test_ResultValues   (    
   uResultValueId             
      ,uResultId             
      ,iElementValueId             
      ,vAnswerValue     
      ,iElementId             
      ,vElementType     
      ,vCorrectAnswer     
      ,iContainerId             
      ,iElementDisplayedOrder             
      ,iAnswerIndex             
      ,iObjectStatus             
      ,iAttemptsToSolveTaskCorrectly             
   ,cIsCorrectAnswer            
      ,dMarkerValue             
  )         
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResultValues')            
     WITH (            
       uResultValueId uniqueidentifier            
      ,uResultId uniqueidentifier            
      ,iElementValueId int            
      ,vAnswerValue NVARCHAR(MAX)            
      ,iElementId int            
      ,vElementType nvarchar(100)            
      ,vCorrectAnswer nvarchar(MAX)            
      ,iContainerId int            
      ,iElementDisplayedOrder int            
      ,iAnswerIndex int            
      ,iObjectStatus int            
      ,iAttemptsToSolveTaskCorrectly int            
   ,cIsCorrectAnswer char(1)            
      ,dMarkerValue decimal            
     )            
     WHERE uResultId in (SELECT uResultId FROM #tempResultIds);            
            
     INSERT INTO t_TestDrive_Test_ResultSummary (    
   uResultSummaryId             
      ,uExecutionId             
      ,iTestNumberOfTasks          
      ,dTestCorrectAnswerValue             
      ,dTestWrongAnswerValue             
      ,dTestNotAttemptedValue             
      ,dTestPoints             
      ,dTestStandardErrorConfidenceIntervalLowerBound             
      ,dTestStandardErrorConfidenceIntervalUpperBound             
      ,iTaskObjectsCorrect             
      ,iTaskObjectsWrong             
      ,iTaskObjectsNotAnswered             
      ,vResultAttribute     
  )           
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResultSummary')            
     WITH(            
       uResultSummaryId uniqueidentifier            
      ,uExecutionId uniqueidentifier            
      ,iTestNumberOfTasks int         
      ,dTestCorrectAnswerValue decimal            
      ,dTestWrongAnswerValue decimal            
      ,dTestNotAttemptedValue decimal            
      ,dTestPoints decimal            
      ,dTestStandardErrorConfidenceIntervalLowerBound decimal            
      ,dTestStandardErrorConfidenceIntervalUpperBound decimal            
      ,iTaskObjectsCorrect int            
      ,iTaskObjectsWrong int            
      ,iTaskObjectsNotAnswered int            
      ,vResultAttribute nvarchar(MAX)            
     )            
     WHERE uExecutionId = @uExecutionId;            
            
  CREATE TABLE #tempResultSummaryIds( uResultSummaryId UNIQUEIDENTIFIER );            
     INSERT INTO #tempResultSummaryIds            
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResultSummary')            
     WITH (uResultSummaryId uniqueidentifier,uExecutionId uniqueidentifier)            
     WHERE uExecutionId = @uExecutionId;            
            
     INSERT INTO t_TestDrive_Test_ResultSummary_SubSubject (    
   uResultSummaryId             
      ,iSubjectId             
      ,dSubSubjectPoints             
      ,iSubSubjectNumberOfTasks             
      ,dSubSubjectCorrectAnswerValue             
      ,dSubSubjectWrongAnswerValue             
      ,dSubSubjectNotAttemptedValue             
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound             
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound             
      ,iTaskObjectsCorrect             
      ,iTaskObjectsWrong             
      ,iTaskObjectsNotAnswered             
      ,vResultAttribute            
      ,cIsSurveySubject        
  )       
     SELECT * FROM             
     OPENJSON(@vResultJSON,'$.TestResultSubSubjectSummary')            
     WITH(            
       uResultSummaryId uniqueidentifier            
      ,iSubjectId int            
      ,dSubSubjectPoints decimal            
      ,iSubSubjectNumberOfTasks int            
      ,dSubSubjectCorrectAnswerValue decimal            
      ,dSubSubjectWrongAnswerValue decimal            
      ,dSubSubjectNotAttemptedValue decimal            
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal            
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal            
      ,iTaskObjectsCorrect int            
      ,iTaskObjectsWrong int            
      ,iTaskObjectsNotAnswered int            
      ,vResultAttribute nvarchar(MAX)            
      ,cIsSurveySubject char(1)            
     )            
     WHERE uResultSummaryId IN (SELECT uResultSummaryId FROM #tempResultSummaryIds);            
            
     DROP TABLE #tempResultIds;            
     DROP TABLE #tempResultSummaryIds;            
    END            
            
   FETCH NEXT FROM CURSOR_TestTokenData INTO @uTestTokenId                      
             
  END            
  CLOSE CURSOR_TestTokenData            
  DEALLOCATE CURSOR_TestTokenData            
            
  IF EXISTS(SELECT * FROM t_TestDrive_WrapperTest_TestForPupil WHERE uCycleId = @uCycleId AND uPupilId = @uSourcePupilId)            
   BEGIN            
    UPDATE t_TestDrive_WrapperTest_TestForPupil             
    SET uClassId = @uClassId, uPupilId = @uTargetPupilId            
    WHERE uCycleId = @uCycleId AND uPupilId = @uSourcePupilId            
   END            
  ELSE            
   BEGIN            
    INSERT INTO t_TestDrive_WrapperTest_TestForPupil   (    
  uWrapperTestId            
     ,uTestId            
     ,uPupilId     
     ,uClassId            
     ,uCycleId            
     ,iCycleRepetition      
 )         
    SELECT             
      uWrapperTestId            
     ,uTestId            
     ,@uTargetPupilId            
     ,@uClassId            
     ,uCycleId            
     ,iCycleRepetition            
     FROM             
    OPENJSON(@vResultJSON,'$.WrapperTest')            
    WITH (            
      uWrapperTestId uniqueidentifier            
     ,uTestId uniqueidentifier            
     ,uPupilId uniqueidentifier            
     ,uClassId uniqueidentifier            
     ,uCycleId uniqueidentifier            
     ,iCycleRepetition int            
    )            
    WHERE uCycleId = @uCycleId AND uPupilId = @uTargetPupilId            
   END            
            
  SET @Message = 'Success'            
 END TRY            
 BEGIN CATCH            
  SET @Message = ERROR_MESSAGE();            
  ROLLBACK TRANSACTION            
 END CATCH            
 COMMIT TRANSACTION            
            
 SELECT (SELECT @Message as vMessage for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                 
END   

----------------------
CREATE PROCedure [dbo].[p_Extranet_TeacherLearningTestManualStatistics_Module_GetCompleteResults]                     
(                                                                          
@uTestId uniqueIdentifier,                        
@uCycleId uniqueIdentifier,                                                                                  
@uClassId uniqueIdentifier,                         
@uPupilId uniqueidentifier,                                                    
@iCycleRepetitionNumber int                                                          
)                                                                          
AS                  
Begin                  
 /********************************************************************************************                  
  Created By:  Sanjay               
  Create Date: 28.02.2020         
      
 ********************************************************************************************/     
                                                                                              
-- TestToken,Execution and Result Summary                                                                          
Select(select TT.uTestTokenId,                   
TT.vTestTokenNumber,                   
TT.uTestId,                   
TT.uPupilId,                  
TT.uParentTestId,                   
TT.uCycleId,                   
TT.iCycleRepetition,                   
TE.uExecutionId,                  
TE.dtTestStart,                  
TE.uElementFormulaAttributeTemplateId ,                  
TE.dtTestEnd, TE.iTestStatusId,                  
TE.iTestSubjectId,                  
TE.iLanguageId, TE.iAlgorithmId,                 
Rs.uResultSummaryId,                  
Rs.vResultAttribute,                  
Rs.iTestNUmberOfTasks,                  
Rs.dTestCorrectAnswerValue,                   
Rs.dTestWrongAnswerValue,                  
Rs.dTestNotAttemptedValue,                  
Rs.dTestPoints,                  
Rs.iTaskObjectsCorrect,                  
Rs.iTaskObjectsNotAnswered,                   
Rs.iTaskObjectsWrong,                   
TE.dBound1,                   
TE.dBound2,                   
TE.iMaximumTasksToBeShown,                  
TE.iMinimumTasksToBeShown,                   
TE.dDifficultyUpperBound,                  
TE.iPerfectNumber,                   
TE.dStartProb,                  
TE.dTestSubjectConstance,                  
TE.dTestSubjectVariance,                  
--Rs.dTestStandardErrorConfidenceIntervalUpperBound,                   
--Rs.dTestStandardErrorConfidenceIntervalLowerBound,          
--Check for null added          
ISNULL(Rs.dTestStandardErrorConfidenceIntervalUpperBound,0.0) dTestStandardErrorConfidenceIntervalUpperBound,                                 
ISNULL(Rs.dTestStandardErrorConfidenceIntervalLowerBound,0.0) dTestStandardErrorConfidenceIntervalLowerBound ,             
TE.vAdaptivePropertiesJson,                   
TE.dStandardErrorConfidenceIntervalAlpha ,TE.uResultAttributeGroupId ,STUFF(                
 (SELECT ';' + vIPAddress                
 FROM t_TestDrive_Test_Execution_SystemDetails TES                
 WHERE TES.uExecutionId = TE.uExecutionId                
 FOR XML PATH('')),1,1,'') vIpAddress               
 for json path, include_null_values, without_array_wrapper)  as JSONResult              
from t_TestDrive_Test_Token TT                  
left outer join t_testdrive_test_execution TE on TT.uTestTokenId = TE.uTestTokenId                   
left outer join t_testdrive_test_resultsummary Rs on TE.uExecutionId = Rs.uExecutionId                   
where (TT.uTestId = @uTestId OR @uTestId='00000000-0000-0000-0000-000000000000')              
and (TT.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000')              
and TT.uCycleId = @uCycleId               
and (TT.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000')              
and (TT.iCycleRepetition = @iCycleRepetitionNumber  OR @iCycleRepetitionNumber = -1)              
and TE.uExecutionId is not null     
order by TE.dtTestStart                       
                                         
--  Test_Execution_SubSubjectDetails                                             
Select(SELECT TRS.[uResultSummaryId] ,                  
TRS.[iSubjectId] ,                  
TRS.[dSubSubjectPoints] ,                  
TRS.[iSubSubjectNumberOfTasks] ,TRS.[dSubSubjectCorrectAnswerValue] ,TRS.[dSubSubjectWrongAnswerValue] ,                  
TRS.vResultAttribute,             
TRS.[dSubSubjectNotAttemptedValue] ,TRS.iTaskObjectsCorrect ,TRS.iTaskObjectsNotAnswered ,         
TRS.iTaskObjectsWrong ,TE.uExecutionId ,          
--TRS.dSubSubjectStandardErrorConfidenceIntervalUpperBound,                  
--TRS.dSubSubjectStandardErrorConfidenceIntervalLowerBound ,          
ISNULL(TRS.dSubSubjectStandardErrorConfidenceIntervalUpperBound,0.0) dSubSubjectStandardErrorConfidenceIntervalUpperBound,                      
ISNULL(TRS.dSubSubjectStandardErrorConfidenceIntervalLowerBound,0.0) dSubSubjectStandardErrorConfidenceIntervalLowerBound ,           
TRS.cIsSurveySubject                  
for json path, include_null_values, without_array_wrapper) as JSONResult                
from t_TestDrive_Test_ResultSummary_SubSubject TRS                  
join t_testdrive_test_resultsummary TR on TRS.uresultsummaryid = TR.uresultsummaryid                   
join t_testdrive_test_execution TE on TR.uExecutionId = TE.uExecutionId                   
join t_TestDrive_Test_Token TT on TE.uTestTokenId = TT.uTestTokenId                  
where (TT.uTestId = @uTestId  OR @uTestId='00000000-0000-0000-0000-000000000000')              
and (TT.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000')                
and TT.uCycleId = @uCycleId               
and (TT.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000')                
and (iCycleRepetition = @iCycleRepetitionNumber   OR @iCycleRepetitionNumber = -1)              
and TE.uExecutionId is not null                
                
-- TestResults                                                                         
Select(SELECT R.[uResultId] ,R.[uExecutionId] ,R.[iPageId] ,R.[iTaskStatusId] ,                  
R.[dtCreatedOn] ,R.[iTimesShown] ,R.[iDisplayedOrder] ,R.[dNextDifficulty] ,                  
R.[cIsCalibratedActive] ,R.[dDifficultyBefore] ,R.[dDifficultyAfter] ,                  
R.[iRoundNumber] ,R.[iTaskSubjectId] ,R.[dTaskDifficulty] ,R.[iTimeTakenToAnswer] ,                  
R.[vPageName] ,R.[iTimeAllocated] ,R.[iTaskTypeId] ,R.[dTaskPercentage] ,                  
R.[iTaskObjectsCorrect] ,R.[iTaskObjectsWrong] ,R.[iTaskObjectsNotAnswered] ,                  
R.[iTaskWeightage] ,R.[cIsseparated],R.[cHasTaskBeenDisplayed],R.[iAttemptsToSolveTaskCorrectly],                  
R.cIsDataStoragePlaceHolder,R.iParentTaskId,R.iSuperGroupTimeAllocated,R.vTaskResultAttribute,R.vTaskElementResultAttribute,R.vTaskDifficulty               
for json path, include_null_values, without_array_wrapper) as JSONResult                  
from t_testdrive_test_result R                  
inner join t_testdrive_test_execution e on e.uexecutionid=R.uexecutionid                   
inner join t_TestDrive_Test_Token t on t.utesttokenid=e.utesttokenid                   
where (t.uTestId = @uTestId OR @uTestId='00000000-0000-0000-0000-000000000000')              
and (T.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000') and t.uCycleId = @uCycleId                   
and (T.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000') and (t.iCycleRepetition = @iCycleRepetitionNumber  OR @iCycleRepetitionNumber = -1)              
and e.uExecutionId is not null                   
order by idisplayedorder                  
                                                            
-- TestResultValues                                                                      
Select(SELECT rv.[uResultValueId] ,rv.[uResultId] ,rv.[iElementValueId] ,rv.[vAnswerValue] ,                  
rv.[iElementId] ,rv.[vElementType] ,rv.[vCorrectAnswer] ,rv.[iContainerId] ,                  
rv.[iElementDisplayedOrder],rv.[iObjectStatus],rv.[iAttemptsToSolveTaskCorrectly],rv.iAnswerIndex,rv.[cIsCorrectAnswer] ,rv.[dMarkerValue]            
-- Added For Issue: Answer is not in order in result Excel from extranet and Test               
for json path, include_null_values, without_array_wrapper)  as JSONResult                  
FROM [t_TestDrive_Test_ResultValues] rv                   
inner join t_testdrive_test_result r on r.uresultid=rv.uresultid                   
inner join t_testdrive_test_execution e on e.uexecutionid=r.uexecutionid                   
inner join t_TestDrive_Test_Token t on t.utesttokenid=e.utesttokenid                   
where (t.uTestId = @uTestId OR @uTestId='00000000-0000-0000-0000-000000000000') AND              
(t.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000') and t.uCycleId = @uCycleId    AND               
(t.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000') and (t.iCycleRepetition = @iCycleRepetitionNumber   OR @iCycleRepetitionNumber = -1)              
and e.uExecutionId is not null                  
                                                      
-- ExecutionSubSubjectDetails                                                                       
Select(SELECT s.[uExecutionSubSubjectDetailsId] ,s.[uExecutionId] ,s.[iSubjectId] ,s.[dConstance] ,s.[dVariance]              
for json path, include_null_values, without_array_wrapper) as JSONResult                   
 FROM [t_TestDrive_Test_Execution_SubSubjectDetails] s                   
 inner join t_testdrive_test_execution e on e.uexecutionid=s.uexecutionid                   
 inner join t_TestDrive_Test_Token t on t.utesttokenid=e.utesttokenid                   
 where (t.uTestId = @uTestId OR @uTestId='00000000-0000-0000-0000-000000000000') and               
 (t.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000') and t.uCycleId = @uCycleId    and               
 (t.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000') and (t.iCycleRepetition = @iCycleRepetitionNumber    OR @iCycleRepetitionNumber = -1)              
  and e.uExecutionId is not null            
          
          
    Select(select uTestExecutionSystemDetailsId,        
SD.uExecutionId,        
vIPAddress,        
dtDatetimeOfLogin,        
vBrowserInformation,        
vBrowser,        
vBrowserVersion,        
vOs for json path, include_null_values, without_array_wrapper) as JSONResult   From t_TestDrive_Test_Execution_SystemDetails SD        
  INNER JOIN t_TestDrive_Test_Execution E on E.uExecutionId = SD.uExecutionId        
  INNER JOIN t_TestDrive_Test_Token TT ON TT.uTestTokenId = E.uTestTokenId        
  where (TT.uTestId = @uTestId OR @uTestId='00000000-0000-0000-0000-000000000000')              
  and (TT.uClassId = @uClassId OR @uClassId='00000000-0000-0000-0000-000000000000')              
  and TT.uCycleId = @uCycleId               
  and (TT.uPupilId = @uPupilId OR @uPupilId='00000000-0000-0000-0000-000000000000')              
   and (TT.iCycleRepetition = @iCycleRepetitionNumber  OR @iCycleRepetitionNumber = -1)                
End   


------------------------------------------------
CREATE PROC [dbo].[p_Extranet_TestResults_Module_GetResultsToAssignPupil]              
(                      
 @uCycleId uniqueidentifier,                      
 @uExecutionId uniqueidentifier                
)                      
AS                      
Begin          
 /********************************************************************************************                                                
 Created By:  Sanjay                                                
 Create Date:  28.06.2019                          
 Description:  Get completed result to assign result other pupil        
                            
 Modified By:          
 Modified Date:        
 Description:          
 ********************************************************************************************/                               
 if(Exists(select tt.uTestTokenId from t_testdrive_test_token tt                     
 inner join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                     
 where te.uExecutionId = @uExecutionId and tt.uCycleid = @uCycleId))                      
 Begin                      
 --Token table                    
 select (select tt.uTestTokenId,      
tt.vTestTokenNumber,      
tt.uCycleId,      
tt.uPupilId,      
tt.uTestId,      
tt.dtCreatedOn,      
tt.uClassId,      
tt.uParentTestId,      
tt.iCycleRepetition,      
tt.iLoginProviderId,      
tt.dtValidTill,      
tt.cIsActive,      
tt.dtValidFrom,      
tt.dtValidTo,      
tt.iSubjectId,      
tt.cIsPracticeTest for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_testdrive_test_token tt                  
 inner join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                     
 where te.uExecutionId = @uExecutionId and tt.uCycleid = @uCycleId                
                   
 --t_TestDrive_Test_Execution                    
 select ( select  uExecutionId,      
uTestTokenId,      
dtTestStart,      
dtTestEnd,      
iSoundVolume,      
iTestStatusId,      
dBound1,      
dBound2,      
dStartProb,      
dTestSubjectConstance,      
dTestSubjectVariance,      
iMaximumTasksToBeShown,      
iMinimumTasksToBeShown,      
dDifficultyUpperBound,      
iPerfectNumber,      
iLanguageId,      
iTestSubjectId,      
dStandardErrorConfidenceIntervalAlpha,      
uElementFormulaAttributeTemplateId,      
uResultAttributeGroupId,      
vAdaptivePropertiesJson,      
iAlgorithmId for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  from t_testdrive_test_execution where uExecutionId = @uExecutionId                
                   
 --t_TestDrive_Test_Execution_SubSubjectDetails                    
 select ( select uExecutionSubSubjectDetailsId,      
uExecutionId,      
iSubjectId,      
dConstance,      
dVariance for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  from t_TestDrive_Test_Execution_SubSubjectDetails where uExecutionId = @uExecutionId                
                  
 --t_TestDrive_Test_Execution_SystemDetails                    
 select (  select uTestExecutionSystemDetailsId,      
uExecutionId,      
vIPAddress,      
dtDatetimeOfLogin,      
vBrowserInformation,      
vBrowser,      
vBrowserVersion,      
vOs  for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_TestDrive_Test_Execution_SystemDetails where uExecutionId = @uExecutionId                
                   
 --t_TestDrive_Test_Result                    
  select (select uResultId,      
uExecutionId,      
iPageId,      
iTaskStatusId,      
dtCreatedOn,      
iTimesShown,      
iDisplayedOrder,      
dNextDifficulty,      
cIsCalibratedActive,      
dDifficultyBefore,      
dDifficultyAfter,      
iTaskSubjectId,      
dTaskDifficulty,      
iTimeTakenToAnswer,      
vPageName,      
iTimeAllocated,      
iTaskTypeId,      
iRoundNumber,      
dTaskPercentage,      
iTaskObjectsCorrect,      
iTaskObjectsWrong,      
iTaskObjectsNotAnswered,      
iTaskWeightage,      
cIsSeparated,      
cHasTaskBeenDisplayed,      
iAttemptsToSolveTaskCorrectly,      
cIsDataStoragePlaceHolder,      
iParentTaskId,      
iSuperGroupTimeAllocated,      
vTaskResultAttribute,      
vTaskElementResultAttribute,      
vTaskDifficulty,      
iCategoryId,      
iCategoryCompetencyId for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_testdrive_test_result where uExecutionId = @uExecutionId                
                
 --t_testdrive_test_resultvalues                    
 select (select uResultValueId,      
uResultId,      
iElementValueId,      
vAnswerValue,      
iElementId,      
vElementType,      
vCorrectAnswer,      
iContainerId,      
iElementDisplayedOrder,      
iAnswerIndex,      
iObjectStatus,      
iAttemptsToSolveTaskCorrectly,      
cIsCorrectAnswer,      
dMarkerValue for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_testdrive_test_resultvalues where uresultid in                      
 (                      
 select uresultid  from t_testdrive_test_result where uExecutionId = @uExecutionId                
 )                      
                   
 --t_testdrive_test_resultsummary                    
 select ( select uResultSummaryId,      
uExecutionId,      
iTestNumberOfTasks,      
dTestCorrectAnswerValue,      
dTestWrongAnswerValue,      
dTestNotAttemptedValue,      
dTestPoints,      
dTestStandardErrorConfidenceIntervalLowerBound,      
dTestStandardErrorConfidenceIntervalUpperBound,      
iTaskObjectsCorrect,      
iTaskObjectsWrong,      
iTaskObjectsNotAnswered,      
vResultAttribute for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_testdrive_test_resultsummary where uExecutionId = @uExecutionId                
                   
 --t_testdrive_test_resultsummary_SubSubject                    
 select ( select uResultSummaryId,      
iSubjectId,      
dSubSubjectPoints,      
iSubSubjectNumberOfTasks,      
dSubSubjectCorrectAnswerValue,      
dSubSubjectWrongAnswerValue,      
dSubSubjectNotAttemptedValue,      
dSubSubjectStandardErrorConfidenceIntervalLowerBound,      
dSubSubjectStandardErrorConfidenceIntervalUpperBound,      
iTaskObjectsCorrect,      
iTaskObjectsWrong,      
iTaskObjectsNotAnswered,      
vResultAttribute,      
cIsSurveySubject for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from t_testdrive_test_resultsummary_SubSubject where uresultsummaryid in                      
 (                      
 select uresultsummaryid  from t_testdrive_test_resultsummary where uExecutionId = @uExecutionId                
 )                    
                    
 -- wrapper table                  
 Declare @uTempWrapperTestId uniqueidentifier, @uTempTestId uniqueidentifier, @uTempPupilId uniqueidentifier,                   
 @uTempClassId uniqueidentifier, @uTempCycleId uniqueidentifier,@iTempCycleRepetition int                  
                   
 select @uTempWrapperTestId = uParentTestId, @uTempTestId = utestId, @uTempPupilId=uPupilId, @uTempClassId = uClassId,                   
 @iTempCycleRepetition=iCycleRepetition FROM [t_TestDrive_Test_Token] tt                 
 inner join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                     
 where te.uExecutionId = @uExecutionId and tt.uCycleid = @uCycleId                
                   
 select ( select uWrapperTestId,      
uTestId,      
uPupilId,      
uClassId,      
uCycleId,      
iCycleRepetition for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult FROM [t_TestDrive_WrapperTest_TestForPupil] where uClassId = @uTempClassId                   
 and uPupilId = @uTempPupilId and uTestId = @uTempTestId and uWrapperTestId = @uTempWrapperTestId                  
 and uCycleId = @uCycleId and iCycleRepetition = @iTempCycleRepetition                  
 End            
                  
select( Select @@ROWCOUNT as RowsAffected for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                     
        
 End   

 ------------------------------

 CREATE PROCedure [dbo].[p_Extranet_TestResults_Module_InsertResultToDatabaseByConnectionString]                                                      
(                                                      
 @vAddData  nvarchar(max),                                                              
 @uCycleId uniqueidentifier,                                            
 @uClassId uniqueidentifier,                                            
 @uTestId uniqueidentifier,                                            
 @uPupilId uniqueidentifier,                                            
 @iCycleRepetition int                                            
)                                                      
AS                                                      
Begin                                                 
 /********************************************************************************************                                                                      
 Created By:  Sanjay                                                                      
 Create Date:  02.07.2019                
 Description:  Insert the result from one pupil to another pupil. Move data                                                
                                                            
 ********************************************************************************************/                          
                         
 if(not exists(select * from t_TestDrive_Test_Token tt                           
 join t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId                          
 where uPupilId = @uPupilId and uTestId = @uTestId                                                       
    and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                      
 Begin                           
   Begin Transaction                                                      
   Begin Try                                                        
  -- delete the recieptent token if already exists.                                                  
  if(exists(select uTesttokenId from t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                                                       
  and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition))                                                      
  Begin                                                       
   Delete  t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                      
   and uClassId = @uClassId and uCycleId = @uCycleId and iCycleRepetition = @iCycleRepetition                                                      
  End                                                      
              
                                                 
   Declare @uNewTokenId uniqueidentifier               
                                                   
    set @uNewTokenId = NEWID()                                            
          print 'insertion starts'                                     
      ---Insert into token table                       
  INSERT INTO [t_TestDrive_Test_Token]                        
   ([uTestTokenId]                                                        
   ,[vTestTokenNumber]                                                        
   ,[uCycleId]                                                        
   ,[uPupilId]                                                        
   ,[uTestId]                                                        
   ,[dtCreatedOn]                                                        
   ,[uClassId]                                                        
   ,[uParentTestId]                                                        
   ,[iCycleRepetition])                                                        
   select @uNewTokenId,vTestTokenNumber,@uCycleId,@uPupilId,@uTestId,GETDATE(),@uClassId,uParentTestId,@iCycleRepetition                                                                
   from OPENJSON(@vAddData)WITH (                                              
   vTestTokenNumber nvarchar(20),           
   uParentTestId uniqueidentifier                                                             
   )                                             
print @uNewTokenId                               
                           
-- Insert into execution table. new id for each execution                                            
Declare @uNewExecutionId uniqueidentifier                                            
    set @uNewExecutionId = NEWID()                                            
                                                
Declare @TestExecutionJson nvarchar(max) = (select TestExecution from openjson(@vAddData)with(              
TestExecution nvarchar(max) as json              
))              
              
              
    insert dbo.t_testdrive_test_execution                      
   ([uExecutionId],[uTestTokenId],[dtTestStart],[dtTestEnd],[iSoundVolume],[iTestStatusId],[dBound1],[dBound2]                                                      
   ,[dStartProb],[dTestSubjectConstance],[dTestSubjectVariance],[iMaximumTasksToBeShown]                                                      
   ,[iMinimumTasksToBeShown],[dDifficultyUpperBound],[iPerfectNumber],[iLanguageId],[iTestSubjectId]                                                      
   ,[dStandardErrorConfidenceIntervalAlpha])                              
   select @uNewExecutionId,@uNewTokenId,dtTestStart,dtTestEnd,iSoundVolume,iTestStatusId,dBound1,dBound2                                        
     ,dStartProb,dTestSubjectConstance,dTestSubjectVariance,iMaximumTasksToBeShown                                                            
     ,iMinimumTasksToBeShown,dDifficultyUpperBound,iPerfectNumber,iLanguageId ,iTestSubjectId                                                      
     ,dStandardErrorConfidenceIntervalAlpha                                                      
   from OPENJSON(@TestExecutionJson)                                                                   
   WITH (                                       
    dtTestStart DateTime,                                                              
    dtTestEnd DateTime,                                                              
    iSoundVolume int,                                                                 
    iTestStatusId int,                                                            
    dBound1 Decimal(8,4),                                                           
    dBound2 Decimal(8,4),                                                            
    dStartProb Decimal(8,4),                                            
    dTestSubjectConstance decimal(8,4),                                                            
    dTestSubjectVariance decimal(8,4) ,                                                            
    iMaximumTasksToBeShown int ,                                                            
    iMinimumTasksToBeShown int ,                                                            
    dDifficultyUpperBound decimal(8,4),                                                            
    iPerfectNumber int ,                                                            
    iLanguageId int ,                                                      
    iTestSubjectId int ,                                                      
    dStandardErrorConfidenceIntervalAlpha decimal(8,4))                                                        
                                              
 Declare @SubSubjectDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SubSubjectDetails from openjson(@vAddData)with(              
t_TestDrive_Test_Execution_SubSubjectDetails nvarchar(max) as json              
))              
              
              
    -- Insert into execution sub subject details table. new id for each entry                                            
    insert t_TestDrive_Test_Execution_SubSubjectDetails                      
   ([uExecutionSubSubjectDetailsId]                         
   ,[uExecutionId]                                                      
   ,[iSubjectId]                                                      
   ,[dConstance]                                    
   ,[dVariance])                                                      
   select NEWID(),@uNewExecutionId,iSubjectId,dConstance,dVariance                   
   from OPENJSON(@SubSubjectDetailsJson)                                                                   
   WITH (                                            
   iSubjectId int ,                    
   dConstance Decimal(8,4),                                                              
   dVariance Decimal(8,4))                                       
                                                    
    -- Insert into execution SystemDetails details table. new id for each entry                                            
       Declare @uNewExecutionSystemId uniqueidentifier                      
       set @uNewExecutionSystemId = NEWID()                                            
                       
    Declare @SystemDetailsJson nvarchar(max) = (select t_TestDrive_Test_Execution_SystemDetails from openjson(@vAddData)with(              
   t_TestDrive_Test_Execution_SystemDetails nvarchar(max) as json              
   ))              
              
       insert t_TestDrive_Test_Execution_SystemDetails                      
     ([uTestExecutionSystemDetailsId]                                                      
     ,[uExecutionId]                                                      
     ,[vIPAddress]                       
     ,[dtDatetimeOfLogin]                                  
     ,[vBrowserInformation])                                                      
   select  NEWID(),@uNewExecutionId,vIPAddress,dtDatetimeOfLogin,vBrowserInformation                                                            
   from OPENJSON(@SystemDetailsJson)                                                                   
   WITH (                                                
   vIPAddress nvarchar(1000),                                                              
   dtDatetimeOfLogin datetime,                                                              
   vBrowserInformation nvarchar(max))                                            
                                               
       -- Insert into Result table. get allresult from xml. loops through and insert into table. for each entry new id is created                                               
       Declare @uResultId uniqueidentifier                           
        Declare @ResultJson nvarchar(max) = (select t_TestDrive_Test_Result from openjson(@vAddData)with(              
    t_TestDrive_Test_Result nvarchar(max) as json              
    ))              
                                         
       Declare Cur_Result Cursor for select uResultId from OPENJSON(@ResultJson)WITH ( uResultId uniqueidentifier)                                                          
       Open Cur_Result                                                          
    Fetch next from Cur_Result into @uResultId                                                          
       while(@@Fetch_Status <> -1)                      
  Begin                                            
   Declare @uNewResultId uniqueidentifier                                            
   set @uNewResultId = NEWID()                                            
                                              
   insert t_testdrive_test_result                      
   ([uResultId],[uExecutionId],[iPageId],[iTaskStatusId],[dtCreatedOn],[iTimesShown],[iDisplayedOrder],[dNextDifficulty]                                                      
   ,[cIsCalibratedActive],[dDifficultyBefore],[dDifficultyAfter],[iTaskSubjectId],[dTaskDifficulty],[iTimeTakenToAnswer]                                                      
   ,[vPageName],[iTimeAllocated],[iTaskTypeId],[iRoundNumber],[dTaskPercentage],[iTaskObjectsCorrect],[iTaskObjectsWrong]           
   ,[iTaskObjectsNotAnswered],[iTaskWeightage],[cIsSeparated],[vTaskResultAttribute],[vTaskElementResultAttribute])                                                         
                                                                        
    select @uNewResultId,@uNewExecutionId,iPageId,iTaskStatusId,dtCreatedOn,iTimesShown,iDisplayedOrder,dNextDifficulty,                                                      
    cIsCalibratedActive,dDifficultyBefore,dDifficultyAfter,iTaskSubjectId,dTaskDifficulty,iTimeTakenToAnswer                                                
    ,vPageName,iTimeAllocated,iTaskTypeId,iRoundNumber,dTaskPercentage,iTaskObjectsCorrect,iTaskObjectsWrong                                                            
    ,iTaskObjectsNotAnswered,iTaskWeightage,cIsSeparated,vTaskResultAttribute,vTaskElementResultAttribute                                                            
    from OPENJSON(@ResultJson)                                                                   
    WITH ( uResultId uniqueidentifier,                              
    iPageId int,                                            
    iTaskStatusId int,                                                              
    dtCreatedOn DateTime ,                                                              
    iTimesShown int ,                                                              
    iDisplayedOrder int,                                                              
    dNextDifficulty decimal(8,4),                                                            
    cIsCalibratedActive char(1) ,                                                              
    dDifficultyBefore decimal(8,4) ,                                                              
    dDifficultyAfter decimal(8,4) ,                                                            
    iTaskSubjectId int ,                        
    dTaskDifficulty decimal(8,4),                                                            
    iTimeTakenToAnswer int ,                                                            
    vPageName nvarchar(200) ,                                                            
    iTimeAllocated int ,                                           
    iTaskTypeId int ,                                
    iRoundNumber int ,                                                               
    dTaskPercentage Decimal(8,4) ,                                                            
    iTaskObjectsCorrect int ,                                                            
    iTaskObjectsWrong int ,                                                            
    iTaskObjectsNotAnswered int ,                                                            
    iTaskWeightage int ,                                                            
    cIsSeparated char(1) ,                  
 vTaskResultAttribute nvarchar(max) ,                  
 vTaskElementResultAttribute nvarchar(max))                                                            
    where uResultId = @uResultId                                                           
                           
   -- Insert into result values table. get all result for select result id and create new id for each for uresultvalue column.                                            
   -- and then insert orginal column values                                                       
   Declare @uResultValueId uniqueidentifier                    
   Declare @ResultValuesJson nvarchar(max) = (select t_TestDrive_Test_ResultValues from openjson(@vAddData)with(              
    t_TestDrive_Test_ResultValues nvarchar(max) as json              
    ))                                                    
   Declare Cur_ResultValues Cursor for select uResultValueId,uResultId from OPENJSON(@ResultValuesJson)                                                                   
   WITH ( uResultValueId nvarchar(100),      
   uResultId uniqueidentifier)                                                          
   where uResultId = @uResultId                        
   print @uResultId                      
   Open Cur_ResultValues                                                          
   fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                          
   While(@@fetch_Status <> -1)                                                          
    Begin                                    
     Declare @uNewResultValueId uniqueidentifier                                            
     set @uNewResultValueId = NEWID()                                            
                                                  
     Declare @vElementType nvarchar(100)                                                          
     select @vElementType = vElementType from OPENJSON(@ResultValuesJson)                                            
     WITH ( uResultValueId nvarchar(100) ,                                                           
     vElementType nvarchar(200) )                 
    where uResultValueId = @uResultValueId                                     
     --print @vElementType                                                  
 if(upper(@vElementType) = 'TWORADIO' or upper(@vElementType) = 'DRAGDROP')                                            
     Begin                      
       Insert t_testdrive_test_resultvalues                                            
       ([uResultValueId]                                                      
       ,[uResultId]                                                      
       ,[iElementValueId]                
       ,[vAnswerValue]                                                      
       ,[iElementId]                                                      
       ,[vElementType]                                                      
       ,[vCorrectAnswer]                                                      
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex)                         
       select @uNewResultValueId,@uNewResultId,iElementValueId,convert(nvarchar(max),vAnswerValue),iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                              
       from OPENJSON(@ResultValuesJson)                                                                   
       WITH (uResultValueId uniqueidentifier,                                            
       iElementValueId int ,                                                              
       vAnswerValue nvarchar(max),                                                              
       iElementId int,                                       
       vElementType nvarchar(200),                                                            
       vCorrectAnswer nvarchar(200),                                                            
       iContainerId  int,                    
    iElementDisplayedOrder  int,                    
    iAnswerIndex  int)                               
       where uResultValueId = @uResultValueId                                     
       print @uResultValueId                                              
     End                                                          
       Else                                                          
     Begin                      
       Insert t_testdrive_test_resultvalues                                            
       ([uResultValueId]                                                      
       ,[uResultId]                                                      
       ,[iElementValueId]                                                      
       ,[vAnswerValue]            
       ,[iElementId]                                                      
       ,[vElementType]                                                      
       ,[vCorrectAnswer]                                                      
       ,[iContainerId],iElementDisplayedOrder,iAnswerIndex  )                                                         
       select @uNewResultValueId,@uNewResultId,iElementValueId,vAnswerValue,iElementId,vElementType,vCorrectAnswer,iContainerId,iElementDisplayedOrder,iAnswerIndex                                                          
       from OPENJSON(@ResultValuesJson)                                                                   
       WITH (uResultValueId uniqueidentifier,                                                      
       iElementValueId int ,          
       vAnswerValue nvarchar(4000),                                                              
       iElementId int ,                                                            
       vElementType nvarchar(200) ,                                                            
       vCorrectAnswer nvarchar(200) ,                                                         
       iContainerId  int,                    
    iElementDisplayedOrder  int,                    
    iAnswerIndex int)                                                           
       where uResultValueId = @uResultValueId                                                      
     End                                                          
     fetch next from Cur_ResultValues into @uResultValueId,@uResultId                                                          
   End                                                            
   Close Cur_ResultValues                                                          
   DeAllocate Cur_ResultValues                                                          
   Fetch next from Cur_Result into @uResultId                     
  End                                                          
  Close Cur_Result                                                          
  Deallocate Cur_Result                                                      
                                               
  -- insert into result summary table. creates new id for each entry                                            
  Declare @uNewResultSummaryId uniqueidentifier                                            
  set @uNewResultSummaryId = NEWID()                                            
                                 Declare @ResultSummary nvarchar(max) = (select t_TestDrive_test_ResultSummary from openjson(@vAddData)with(              
    t_TestDrive_test_ResultSummary nvarchar(max) as json              
    ))              
  INSERT t_TestDrive_test_ResultSummary                      
   ([uResultSummaryId]                                                
   ,[uExecutionId]                                                
   ,[iTestNumberOfTasks]                                                
   ,[dTestCorrectAnswerValue]                                                
   ,[dTestWrongAnswerValue]                                                
   ,[dTestNotAttemptedValue]                                                
   ,[dTestPoints]                                                
   ,[dTestStandardErrorConfidenceIntervalLowerBound]                                                
   ,[dTestStandardErrorConfidenceIntervalUpperBound]                    
   ,[iTaskObjectsCorrect]                    
   ,[iTaskObjectsNotAnswered]                    
   ,[iTaskObjectsWrong]                    
   ,[vResultAttribute])                                                        
     select @uNewResultSummaryId, @uNewExecutionId, iTestNumberOfTasks, dTestCorrectAnswerValue,dTestWrongAnswerValue,                                            
     dTestNotAttemptedValue,dTestPoints,dTestStandardErrorConfidenceIntervalLowerBound,dTestStandardErrorConfidenceIntervalUpperBound,iTaskObjectsCorrect                    
   ,iTaskObjectsNotAnswered,iTaskObjectsWrong,vResultAttribute                                                  from OPENJSON(@ResultSummary)                                                                   
     WITH (                                            
    iTestNumberOfTasks int,                                            
    dTestCorrectAnswerValue decimal(8,4) ,                                                            
    dTestWrongAnswerValue decimal(8,4),                                                     
    dTestNotAttemptedValue decimal(8,4) ,                                                            
    dTestPoints decimal(8,4),                                            
    dTestStandardErrorConfidenceIntervalLowerBound Decimal(16,4),                                                      
    dTestStandardErrorConfidenceIntervalUpperBound decimal(16,4) ,                    
 iTaskObjectsCorrect int ,                    
 iTaskObjectsNotAnswered int ,                    
 iTaskObjectsWrong int ,                    
 vResultAttribute nvarchar(MAX)                   
 )                                                         
                  Declare @ResultSummary_SubSubject nvarchar(max) = (select t_TestDrive_Test_ResultSummary_SubSubject from openjson(@vAddData)with(              
    t_TestDrive_Test_ResultSummary_SubSubject nvarchar(max) as json              
    ))              
  -- insert into result summary sub subject details.                                            
  Insert t_testdrive_test_resultsummary_SubSubject                   ([uResultSummaryId]                                                      
   ,[iSubjectId]                                                      
   ,[dSubSubjectPoints]                                                      
   ,[iSubSubjectNumberOfTasks]                                                    
   ,[dSubSubjectCorrectAnswerValue]                                                      
   ,[dSubSubjectWrongAnswerValue]                                                      
   ,[dSubSubjectNotAttemptedValue]                                                      
   ,[dSubSubjectStandardErrorConfidenceIntervalLowerBound]                                                     
   ,[dSubSubjectStandardErrorConfidenceIntervalUpperBound])                 
     select @uNewResultSummaryId,iSubjectId                                                            
   ,dSubSubjectPoints                                                            
   ,iSubSubjectNumberOfTasks                                                            
   ,dSubSubjectCorrectAnswerValue                                                            
   ,dSubSubjectWrongAnswerValue                                                            
   ,dSubSubjectNotAttemptedValue                                                            
   ,dSubSubjectStandardErrorConfidenceIntervalLowerBound                                                      
   ,dSubSubjectStandardErrorConfidenceIntervalUpperBound                                                      
     from OPENJSON(@ResultSummary_SubSubject)                                                                   
     WITH (                                            
    iSubjectId int,                                                              
    dSubSubjectPoints decimal(8,4)                                                             
    ,iSubSubjectNumberOfTasks int                                                   
    ,dSubSubjectCorrectAnswerValue decimal(8,4)                                               
    ,dSubSubjectWrongAnswerValue decimal(8,4)                                                      
    ,dSubSubjectNotAttemptedValue decimal(8,4)                                       
    ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal(16,4)                                                  
    ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal (16,4))                                                                 
                                                        
  Declare @WrapperTest_TestForPupil nvarchar(max) = (select t_TestDrive_WrapperTest_TestForPupil from openjson(@vAddData)with(              
    t_TestDrive_WrapperTest_TestForPupil nvarchar(max) as json              
  ))              
              
    INSERT INTO [t_TestDrive_WrapperTest_TestForPupil]                      
  ([uWrapperTestId]                                                  
  ,[uTestId]                        
  ,[uPupilId]                                                  
  ,[uClassId]                      ,[uCycleId]                                                  
  ,[iCycleRepetition])                                                  
    select uWrapperTestId, uTestId,@uPupilId,@uClassId,@uCycleId,iCycleRepetition                                 
    from OPENJSON(@WrapperTest_TestForPupil)                                            
    WITH(                                                                     
  uWrapperTestId uniqueidentifier,                                                    
  uTestId uniqueidentifier ,                                
  uPupilId uniqueidentifier,                                                  
  uClassId uniqueidentifier ,                                                  
  uCycleId uniqueidentifier ,                                                  
  iCycleRepetition INT )                                                  
                            
      -- return newly added data.                        
      print 'success returning data'                      
         select(select uTestTokenId,                          
     vTestTokenNumber,                          
     uCycleId,                                  
     T.uPupilId,                                
     T.uTestId,                                 
     T.dtCreatedOn,                             
     T.uClassId,                                
     T.dtValidTill,                            
     T.dtModifiedOn,                            
     uParentTestId,                             
     --Te.iSubjectId,                            
     iCycleRepetition,                          
     isnull((select  e.uExecutionId,                          
     e.iTestStatusId,                          
     e.uTestTokenId,                        
     e.dtTestStart,                            
     e.dtTestEnd,                    
     (select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                           
     From t_TestDrive_Test_Execution e                               
     where e.uTestTokenId = T.uTestTokenId                           
      and t.uCycleId=@uCycleId                            
     for json path, include_null_values                              
     ),'[]')  [TestExecution],                                     
                                        
     ISNULL((select r.uResultSummaryId,                              
     r.uExecutionId,                                                 
     r.iTaskObjectsCorrect,                                          
     r.iTaskObjectsWrong,                                            
     r.iTaskObjectsNotAnswered,                                      
     r.vResultAttribute                                        
     From t_TestDrive_Test_Execution e                               
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                              
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                        
     for json path, include_null_values                          
     ) , '[]') [TestResultSummary] ,                           
                                        
     isnull((select  s.uResultSummaryId,          
     s.iSubjectId,                                               
     s.iTaskObjectsCorrect,                                      
     s.iTaskObjectsWrong,                                        
     s.iTaskObjectsNotAnswered,                  
     s.vResultAttribute                                        
     From t_TestDrive_Test_Execution e                           
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                          
     inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                              
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                        
     for json path, include_null_values                                 
     ),'[]')  [TestResultSummarySubSubject]                           
                                        
     for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                    
     where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition  and uTestTokenId = @uNewTokenId    
                                 
   End Try                           
   Begin Catch            
      
  IF (select CURSOR_STATUS('global','Cur_Result'))>=-1      
  BEGIN      
   Close Cur_Result       
   DEALLOCATE Cur_Result      
  END       
  IF (select CURSOR_STATUS('global','Cur_ResultValues'))>=-1      
  BEGIN      
   Close Cur_ResultValues       
   DEALLOCATE Cur_ResultValues      
  END       
                                
   Select(      
    select '  ' NewTokenId, @uPupilId uPupilId,@uTestId uTestId,@uClassId uClassId,'Failure' MoveStatus ,str(ERROR_NUMBER())+ERROR_PROCEDURE()+str(ERROR_LINE())+ERROR_MESSAGE() Error for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult
  
    
      
     IF @@TRANCOUNT > 0                                                          
     Begin                                                          
   print 'On rollback'                                                          
   ROLLBACK TRANSACTION                                               
     End                                                          
    return                                                          
   End Catch                                                       
                                                   
   Commit transaction                       
 end                          
else                          
 Begin                          
    select(select uTestTokenId,                          
     vTestTokenNumber,                          
     uCycleId,                                  
     T.uPupilId,                                
     T.uTestId,                                 
     T.dtCreatedOn,                             
     T.uClassId,                                
     T.dtValidTill,                            
     T.dtModifiedOn,                            
     uParentTestId,                             
     --Te.iSubjectId,                            
     iCycleRepetition,                          
     isnull((select  e.uExecutionId,                          
     e.iTestStatusId,                          
     e.uTestTokenId,                        
     e.dtTestStart,                            
     e.dtTestEnd,                    
     (select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                           
     From t_TestDrive_Test_Execution e                               
     where e.uTestTokenId = T.uTestTokenId                           
      and t.uCycleId=@uCycleId                            
     for json path, include_null_values                              
     ),'[]')  [TestExecution],                                     
                             
     ISNULL((select r.uResultSummaryId,                              
     r.uExecutionId,                                                 
     r.iTaskObjectsCorrect,                                          
     r.iTaskObjectsWrong,                                            
     r.iTaskObjectsNotAnswered,                                      
     r.vResultAttribute                                        
     From t_TestDrive_Test_Execution e                               
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                              
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                        
     for json path, include_null_values                          
     ) , '[]') [TestResultSummary] ,                           
                                        
     isnull((select  s.uResultSummaryId,                   
     s.iSubjectId,                                               
     s.iTaskObjectsCorrect,                                      
     s.iTaskObjectsWrong,                                        
     s.iTaskObjectsNotAnswered,                  
     s.vResultAttribute                                        
     From t_TestDrive_Test_Execution e                           
     inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                          
     inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                              
     where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                        
     for json path, include_null_values                                 
     ),'[]')  [TestResultSummarySubSubject]                           
                                        
     for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                    
     where  T.uTestId = @uTestId and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition                        
 End                         
end   

----------------------------------------------

CREATE PROCedure [dbo].[p_Extranet_TestResults_Module_ClearTestResultOfPupil]                                        
(                                        
 @uPupilId uniqueidentifier,                                        
 @uTestId uniqueidentifier,                                        
 @uCycleId uniqueidentifier,                                      
 @uClassId uniqueidentifier,                              
 @iCycleRepetition int,                        
 @uExecutionId uniqueidentifier,                    
 @cIsDeleteToken char(1)                    
)                                        
AS                                         
Begin                                          
 /********************************************************************************************                                          
 Created By:  Sanjay                                          
 Create Date:  02.07.2007                                          
 Description:  Created to insert deleted results from actual Result db                           
                                
 ********************************************************************************************/                                      
  --Begin TRAN DeleteExistingRecords                                                          
  Declare @uTestTokenId uniqueidentifier              
                                 
        if ( exists ( select uTesttokenId from t_TestDrive_Test_Token where uPupilId = @uPupilId                                        
     and uTestId = @uTestId                                        
     and uCycleId = @uCycleId                               
     and uClassId =  @uClassId                              
     and iCycleRepetition = @iCycleRepetition                              
     )                                       
  )                                         
    Begin      
 print '1'                                                    
    delete  from t_TestDrive_Test_ResultSummary_SubSubject where uresultsummaryid in                    
    (                                        
  select  uresultsummaryid from t_testdrive_test_resultsummary where   uExecutionId = @uExecutionId                        
    )                                          
    print '2'                                            
    delete  from t_testdrive_test_resultsummary where uExecutionId = @uExecutionId                        
         print '3'                                       
    delete  from t_testdrive_test_resultvalues where uresultid in                    
    (                                        
      select  uresultid from t_testdrive_test_result where   uExecutionId = @uExecutionId                        
    )            
       print '4'     
 delete  from t_TestDrive_Test_ResultElementData where uresultid in                    
    (                                        
      select  uresultid from t_testdrive_test_result where   uExecutionId = @uExecutionId                        
    )                                          
                print '5'                                
    delete  from t_testdrive_test_result where   uExecutionId = @uExecutionId                        
                  print '6'                               
    delete  from t_TestDrive_Test_Execution_SubSubjectDetails where  uExecutionId = @uExecutionId                        
                   print '7'     
    delete  from t_TestDrive_Test_Execution_SystemDetails where  uExecutionId = @uExecutionId                        
                                  print '8'                              
    delete  from t_testdrive_test_execution where uExecutionId = @uExecutionId                      
                    
 if(@cIsDeleteToken = 'Y')                    
 Begin                    
 print '9'     
   delete  from t_TestDrive_Test_Token where uPupilId = @uPupilId and uTestId = @uTestId                                        
        and uCycleId = @uCycleId and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition                     
 End                       
 end                         
 if ( exists ( select * from t_TestDrive_WrapperTest_TestForPupil                    
   where     uPupilId = @uPupilId                                        
   and uTestId = @uTestId                       
   and uCycleId = @uCycleId                               
   and uClassId =  @uClassId                          
   and iCycleRepetition = @iCycleRepetition))                                         
 Begin                               
 print '10'           
  Delete t_TestDrive_WrapperTest_TestForPupil where uPupilId = @uPupilId                                        
  and uTestId = @uTestId                                        
  and uCycleId = @uCycleId                               
  and uClassId =  @uClassId                            
  and iCycleRepetition = @iCycleRepetition             
      
                     
 End                              
 --commit TRAN DeleteExistingRecords                            
            
 select( Select @@ROWCOUNT as RowsAffected for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult             
 end   

 ---------------------------------------------------------

 CREATE PROCEDURE [dbo].[p_Extranet_TestResults_Module_InsertLearningTestGenerationForLastRoundInDatabase]          
 @vExecutedInHost nvarchar(250),          
 @vExecutionJSON NVARCHAR(MAX)              
AS                                                                      
BEGIN                                                                      
/********************************************************************************************                                                                                                
 Created By:       Sanjay                                                                  
 Create Date:      10.08.2020                                                                                 
 Description:      To Add data for which Learning Tests has to be generated for last round          
          
 ********************************************************************************************/                                                                                           
DECLARE @uExecutionId UNIQUEIDENTIFIER,@intCycleRepitition INT;          
          
DECLARE Executions_Cursor CURSOR FOR          
SELECT uExecutionId from           
OPENJSON(@vExecutionJSON)with(uExecutionId UNIQUEIDENTIFIER)          
          
OPEN Executions_Cursor;          
FETCH NEXT FROM Executions_Cursor INTO @uExecutionId;          
          
WHILE @@FETCH_STATUS = 0          
   BEGIN          
      IF EXISTS(SELECT * FROM t_TestDrive_Test_Execution_LearningTest WHERE uExecutionId = @uExecutionId)          
  BEGIN          
   SELECT @intCycleRepitition =MAX(iLearningTestRepetition) from           
   t_TestDrive_Test_Execution_LearningTest WHERE uExecutionId = @uExecutionId          
   SET @intCycleRepitition = @intCycleRepitition+1;          
  END          
 ELSE          
  BEGIN          
   SET @intCycleRepitition = 2;          
  END          
 INSERT INTO t_TestDrive_Test_Execution_LearningTest           
 VALUES (NEWID(),@uExecutionId,@intCycleRepitition,'Y','N',NULL,'N',@vExecutedInHost,NULL,GETDATE(),null)          
          
 FETCH NEXT FROM Executions_Cursor INTO @uExecutionId;           
          
   END;          
          
CLOSE Executions_Cursor;          
DEALLOCATE Executions_Cursor;          
          
 select(select T.uExecutionId,T.iLearningTestRepetition,T.uExecutionLearningTestId for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                                                 
 From t_TestDrive_Test_Execution_LearningTest T          
 WHERE T.uExecutionId in (SELECT uExecutionId from OPENJSON(@vExecutionJSON)with(uExecutionId UNIQUEIDENTIFIER))                          
          
                   
END   

--------------------------------------------------------------------------
CREATE PROC [dbo].[p_Extranet_PracticeTest_Module_ResetResults](      
  @uCycleId uniqueidentifier,      
  @uPupilId uniqueidentifier,      
  @uClassId uniqueidentifier,      
  @iSubjectId int,      
  @iLanguageId int      
)      
As      
      
/********************************************************************************************         
 Created By: Sanjay      
 Created Date:  09.07.2019    
 Created Description: Resets the TaskstatusId to not answered for the Practice test results for a particulal pupil and subject      
      
 Modified By:        
 Modified Date:        
 Modified Description:       
      
********************************************************************************************/          
      
Begin      
 Declare @uTestTokenId uniqueidentifier,@uExecutionId uniqueidentifier      
      
 If Exists(select * From t_TestDrive_Test_Token where uCycleId = @uCycleId and uPupilId = @uPupilId and uClassId = @uClassId and iSubjectid = @iSubjectId and cIsPracticeTest = 'Y')      
 BEGIN      
        
      select @uTestTokenId=uTestTokenId From t_TestDrive_Test_Token where uCycleId = @uCycleId and uPupilId = @uPupilId and uClassId = @uClassId and iSubjectid = @iSubjectId and cIsPracticeTest = 'Y'      
      
   If Exists(select * from t_TestDrive_Test_Execution where uTestTokenId = @uTestTokenId)      
   Begin      
      
             Select @uExecutionId = uExecutionId From t_TestDrive_Test_Execution where uTestTokenId = @uTestTokenId and iLanguageId = @iLanguageId      
      
       update t_TestDrive_Test_Result set iTaskStatusId = 3 where uExecutionId = @uExecutionId      
   End      
           
 End      
      
  select (select @@ROWCOUNT as RowData for json path, include_null_values, without_array_wrapper) as JSONResult    
    
    
END   

-------------------------


ALTER PROCedure [dbo].[p_Object_TestApplication_WrapperTestLoginAndResult_EditData]                                                
    @strPupilJson ntext,                                                
    @uParentTestId uniqueIdentifier,                                             
    @uCycleId uniqueIdentifier,                                               
    @uClassId uniqueIdentifier,                                                 
    @strAdditionalNumber NVARCHAR(10),                                                  
    @iCycleRepetition int,                                                  
    @vResultDatabaseJson ntext,                                                
    @iLoginProviderId int,                                                
    @iSubjectId int,                                             
    @cIsPracticeTest char(1),                                            
    @strTestLoginPaperlessStatus nvarchar(50) = ''  ,                                  
    @vValidTill nvarchar(100)                              
as                                                  
Begin                                   
                          
 /*********************************************************************                               
   Created By:   Praveen                                       
   Created Date: 21-10-2019                                         
   Description:  Inserts Tokens and Updates dtValid for Existing Tokens, And returns the data required for TestLoginsAndResult Entity                            
   Sample:       Proc_Fusion_Object_TestApplication_TestLoginsAndResult_StandardTest_EditData '[{"PupilId":"D15A561B-793C-40A9-A0D5-80A1237BF082"}]', '9034ebdf-d303-4e82-892d-fb3cae264ef3', '8c880d36-6e8f-4ebb-a725-3c2f0f689dbf', '7bf7247e-42c0-4406-92d1-
  
    
      
        
          
            
              
38fa31b3871d', '98495', 1, '[{"vDatabaseName":"Arcadix_Common_Result","vDatabaseServer":""}]', 1, 0, 'N', 'open', '2019-04-22 15:35:16.313'                 
               
 ModifiedBy :Sanjay              
 Date:06.10.2020              
 Added dtModifedOn in insert and update statement.              
                                      
*********************************************************************/                                    
                                      
declare @dtValidTill datetime = null                                     
                                  
begin try                                  
set @dtValidTill = cast(@vValidTill as datetime)                                  
end try                                  
begin catch                                  
if (@strTestLoginPaperlessStatus = 'Activate')                                      
     begin                                      
    set @dtValidTill  = getdate()                                      
   set @dtValidTill =  DATEADD(mi, 90,   @dtValidTill);                                         
  end                                      
else if(@strTestLoginPaperlessStatus = 'DeActivate')                                      
 begin                                      
    set @dtValidTill  = getdate()                                      
   set @dtValidTill =  DATEADD(mi, -90,   @dtValidTill);                                         
  end                                   
end catch                                    
                                              
 Declare  @uPupilId uniqueidentifier                      
 Declare  @uTestId uniqueidentifier                                            
 DECLARE cursor_TestTokenData CURSOR FOR select  PupilId,TestId                                                
   from    openjson(@strPupilJson)                                                
   WITH ( PupilId uniqueidentifier '$.uPupilId',      
   TestId uniqueidentifier '$.uTestId')                                                
 open cursor_TestTokenData                                                
 Fetch Next From cursor_TestTokenData into @uPupilId,@uTestId                                               
 while( @@FETCH_STATUS <> -1 )                                                  
 Begin                                  
             
    if ( not exists (       
 select utestTokenId from t_TestDrive_Test_Token       
 where uTestId = @uTestId and uPupilId = @uPupilId and uCycleId = @uCycleId and uParentTestId = @uParentTestId                                                 
          and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition       
    and cIsPracticeTest = @cIsPracticeTest and iSubjectId = @iSubjectId))                                                  
     Begin                                    
         Insert  into t_TestDrive_Test_Token (vTestTokenNumber,uCycleId, uPupilId, uTestId, uClassId, iCycleRepetition, iLoginProviderId, cIsActive, dtValidTill,iSubjectId,cIsPracticeTest,dtCreatedOn,dtModifiedOn,uParentTestId)                            
  
    
                    
         values  ( '', @uCycleId, @uPupilId, @uTestId, @uClassId,@iCycleRepetition, @iLoginProviderId, 'Y', @dtValidTill,@iSubjectId,@cIsPracticeTest,GETDATE(),GETDATE(),@uParentTestId)                                       
     End                               
   else if (@strTestLoginPaperlessStatus <> '')                               
      Begin                                      
            --this change is done to update the dtValidTill for Paperless testlogins, else default null value will be update                                       
        update t_TestDrive_Test_Token set dtValidTill = @dtValidTill, dtModifiedOn = GETDATE()       
  where uTestId = @uTestId AND uParentTestId = @uParentTestId       
        and uPupilId = @uPupilId and uCycleId = @uCycleId                                                  
        and uClassId = @uClassId and iCycleRepetition = @iCycleRepetition       
  and iSubjectId = @iSubjectId and cIsPracticeTest = @cIsPracticeTest                   
      End             
                                 
    -- loop next pupil and details                                        
 Fetch Next From cursor_TestTokenData into @uPupilId, @uTestId                                                  
 End                                                  
 close cursor_TestTokenData                                                  
 Deallocate cursor_TestTokenData                             
                        
                                     
                          
  select(select uTestTokenId,                            
vTestTokenNumber,                            
uCycleId,                                    
T.uPupilId,                                  
T.uTestId,                                   
T.dtCreatedOn,                               
T.uClassId,                                  
T.dtValidTill,                              
T.dtModifiedOn,                              
uParentTestId,                               
--Te.iSubjectId,                              
iCycleRepetition,                            
isnull((select  e.uExecutionId,                            
e.iTestStatusId,                            
e.uTestTokenId,                          
e.dtTestStart,                              
e.dtTestEnd,                      
(select count(*) from t_TestDrive_Test_Execution_SystemDetails where uExecutionId =  e.uExecutionId) as iNoOfLoginAttempts                             
From t_TestDrive_Test_Execution e                                 
where e.uTestTokenId = T.uTestTokenId                             
 and t.uCycleId=@uCycleId                              
for json path, include_null_values                                
),'[]')  [TestExecution],                                       
                                          
ISNULL((select r.uResultSummaryId,                                
r.uExecutionId,                                                   
r.iTaskObjectsCorrect,                                            
r.iTaskObjectsWrong,                                              
r.iTaskObjectsNotAnswered,                                        
r.vResultAttribute                                          
From t_TestDrive_Test_Execution e              
inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                                
where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId         
for json path, include_null_values                            
) , '[]') [TestResultSummary] ,                             
                                          
isnull((select  s.uResultSummaryId,                     
s.iSubjectId,                                                 
s.iTaskObjectsCorrect,                                        
s.iTaskObjectsWrong,                                          
s.iTaskObjectsNotAnswered,                    
s.vResultAttribute                                          
From t_TestDrive_Test_Execution e                             
inner join t_TestDrive_Test_ResultSummary r on e.uExecutionId = r.uExecutionId                                                            
inner join t_TestDrive_Test_ResultSummary_SubSubject s on r.uResultSummaryId = s.uResultSummaryId                                                                
where e.uTestTokenId = T.uTestTokenId and T.uCycleId=@uCycleId                                          
for json path, include_null_values                                   
),'[]')  [TestResultSummarySubSubject]                             
                                          
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult  From t_TestDrive_Test_Token T                                      
--left outer join [Arcadix_Common_CMS].dbo.t_TestDrive_Test Te on T.uTestId = TE.uTestId                          
where        
 T.uParentTestId = @uParentTestId and uCycleId = @uCycleId and uClassId = @uClassId       
and iCycleRepetition = @iCycleRepetition  and T.uPupilId in       
(select PupilId from openjson(@strPupilJson)  WITH (PupilId uniqueidentifier '$.uPupilId'))                          
End      

--------------------------------------------------


ALTER PROCedure [dbo].[p_Extranet_Pupil_Module_ClearTestResultOfPupil]           
(                                      
 @uPupilId uniqueidentifier,                                        
 @uCycleId uniqueidentifier,                                        
 @uClassId uniqueidentifier,                                               
 @cIsDeleteToken char(1)                      
)                                          
AS                                           
Begin           
                                       
 DECLARE @tempRecords TABLE      
(uExecutionId UNIQUEIDENTIFIER)      
       
          
 INSERT INTO @tempRecords          
 SELECT te.uExecutionId          
 FROM t_testdrive_test_token tt                           
 INNER JOIN t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId             
 WHERE           
 tt.uPupilId = @uPupilId         
 AND tt.uCycleId = @uCycleId           
 AND tt.uClassId = @uClassId          
            
  Declare @uTestTokenId uniqueidentifier                
                                   
                                                   
    delete  from t_TestDrive_Test_ResultSummary_SubSubject where uresultsummaryid in                      
    (                                          
  select  uresultsummaryid from t_testdrive_test_resultsummary where   uExecutionId                      
  IN (SELECT uExecutionId FROM @tempRecords)          
    )                                            
                                                 
    delete  from t_testdrive_test_resultsummary where uExecutionId                           
  IN (SELECT uExecutionId FROM @tempRecords)          
                                                 
    delete  from t_testdrive_test_resultvalues where uresultid in                      
    (                                          
      select  uresultid from t_testdrive_test_result where   uExecutionId                        
  IN (SELECT uExecutionId FROM @tempRecords)          
    )              
             
 delete  from t_TestDrive_Test_ResultElementData where uresultid in                      
    (                                          
      select  uresultid from t_testdrive_test_result where   uExecutionId                          
  IN (SELECT uExecutionId FROM @tempRecords)          
    )                                            
                                                 
    delete  from t_testdrive_test_result where   uExecutionId                        
  IN (SELECT uExecutionId FROM @tempRecords)          
                                                  
    delete  from t_TestDrive_Test_Execution_SubSubjectDetails where  uExecutionId                          
  IN (SELECT uExecutionId FROM @tempRecords)          
                         
    delete  from t_TestDrive_Test_Execution_SystemDetails where  uExecutionId                         
  IN (SELECT uExecutionId FROM @tempRecords)          
                                                                 
    delete  from t_testdrive_test_execution where uExecutionId                           
  IN (SELECT uExecutionId FROM @tempRecords)          
                      
 if(@cIsDeleteToken = 'Y')                      
 Begin                      
   delete  from t_TestDrive_Test_Token where uPupilId = @uPupilId           
                                         
        and uCycleId = @uCycleId and uClassId = @uClassId            
            
 End                         
 --end                                 
 if ( exists ( select * from t_TestDrive_WrapperTest_TestForPupil                      
   where     uPupilId = @uPupilId           
                                      
   and uCycleId = @uCycleId                                 
   and uClassId =  @uClassId                           
       
   ))                                           
 Begin                                       
  Delete t_TestDrive_WrapperTest_TestForPupil where uPupilId = @uPupilId           
                          
  and uCycleId = @uCycleId                                 
  and uClassId =  @uClassId                              
                     
 End                        
  DROP TABLE #tempRecords        
  
    DELETE t_TestDrive_Test_OfflineToken_Topic WHERE uOfflineTokenId in (     
  SELECT uOfflineTokenId FROM t_TestDrive_Test_OfflineToken WHERE uPupilId = @uPupilId AND uClassId = @uClassId and uCycleId = @uCycleId    
  )    
    
  DELETE t_TestDrive_Test_OfflineToken_Execution     
  WHERE uOfflineTokenId in (     
 SELECT uOfflineTokenId FROM t_TestDrive_Test_OfflineToken WHERE uPupilId = @uPupilId AND uClassId = @uClassId and uCycleId = @uCycleId    
  )    
    
  DELETE t_TestDrive_Test_OfflineToken WHERE uPupilId = @uPupilId AND uClassId = @uClassId and uCycleId = @uCycleId    

      
 select( Select @@ROWCOUNT as RowsAffected for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult               
 end 


 ----------------------------------------------


 ALTER PROCEDURE [dbo].[p_Extranet_Pupil_Module_InsertMergedResultToDatabase]                
(                                                    
  @vResultJSON  nvarchar(max),              
  @uCycleId uniqueidentifier,              
  @uClassId uniqueidentifier,              
  @uSourcePupilId uniqueidentifier,              
  @uTargetPupilId uniqueidentifier,              
  @cIsRecycleBinDataBase CHAR(1)                                        
)                                                    
AS                                                    
BEGIN              
DECLARE @Message NVARCHAR(MAX);              
 BEGIN TRANSACTION              
 BEGIN TRY              
  DECLARE @uTestTokenId UNIQUEIDENTIFIER;              
               
  DECLARE CURSOR_TestTokenData CURSOR FOR              
  SELECT uTestTokenId FROM OPENJSON(@vResultJSON,'$.TestTokens')              
  WITH ( uTestTokenId UNIQUEIDENTIFIER '$.uTestTokenId' )              
              
  OPEN CURSOR_TestTokenData                                                  
  FETCH NEXT FROM CURSOR_TestTokenData into @uTestTokenId              
  WHILE(@@FETCH_STATUS <> -1)                                             
  BEGIN              
                
   IF EXISTS( SELECT * FROM t_TestDrive_Test_Token WHERE uTestTokenId = @uTestTokenId) AND @cIsRecycleBinDataBase = 'N'              
    BEGIN              
     UPDATE t_TestDrive_Test_Token               
     SET uClassId = @uClassId, uPupilId = @uTargetPupilId              
     WHERE uTestTokenId = @uTestTokenId              
    END              
   ELSE              
    BEGIN              
                  
     INSERT INTO t_TestDrive_Test_Token ( uTestTokenId              
      ,vTestTokenNumber              
      ,uCycleId              
      ,uPupilId              
      ,uTestId              
      ,dtCreatedOn              
      ,uClassId              
      ,uParentTestId              
      ,iCycleRepetition              
      ,iLoginProviderId              
      ,dtValidTill              
      ,cIsActive              
      ,dtValidFrom              
      ,dtValidTo              
      ,iSubjectId              
      ,cIsPracticeTest              
      ,dtModifiedOn)             
     SELECT               
       uTestTokenId              
      ,vTestTokenNumber              
      ,uCycleId              
      ,@uTargetPupilId              
      ,uTestId              
      ,dtCreatedOn              
      ,@uClassId              
      ,uParentTestId              
      ,iCycleRepetition              
      ,iLoginProviderId              
      ,dtValidTill              
      ,cIsActive              
      ,dtValidFrom              
      ,dtValidTo              
      ,iSubjectId              
      ,cIsPracticeTest              
      ,dtModifiedOn --Not Present in Active DB              
     FROM               
     OPENJSON(@vResultJSON,'$.TestTokens')              
     WITH(              
       uTestTokenId uniqueidentifier              
      ,vTestTokenNumber nvarchar(26)              
      ,uCycleId uniqueidentifier                    
      ,uTestId uniqueidentifier              
      ,dtCreatedOn smalldatetime              
      ,uClassId uniqueidentifier              
      ,uParentTestId uniqueidentifier              
      ,iCycleRepetition int              
      ,iLoginProviderId int              
      ,dtValidTill datetime              
      ,cIsActive char(1)              
      ,dtValidFrom datetime              
      ,dtValidTo datetime              
      ,iSubjectId int              
      ,cIsPracticeTest char(1)              
      ,dtModifiedOn datetime              
     )              
     WHERE uTestTokenId = @uTestTokenId;              
              
     INSERT INTO t_TestDrive_Test_Execution (uExecutionId               
      ,uTestTokenId               
      ,dtTestStart               
      ,dtTestEnd               
      ,iSoundVolume               
      ,iTestStatusId               
      ,dBound1               
      ,dBound2               
      ,dStartProb               
      ,dTestSubjectConstance               
      ,dTestSubjectVariance               
      ,iMaximumTasksToBeShown               
      ,iMinimumTasksToBeShown               
      ,dDifficultyUpperBound               
      ,iPerfectNumber               
      ,iLanguageId               
      ,iTestSubjectId               
      ,dStandardErrorConfidenceIntervalAlpha           
      ,uElementFormulaAttributeTemplateId               
      ,uResultAttributeGroupId               
      ,vAdaptivePropertiesJson      
      ,iAlgorithmId               
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1              
      ,iTaskCountDisplayed               
      ,iTotalEffectiveTimeTaken               
      ,dtLastTaskAnsweredOn )             
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestExecutions')              
     WITH (              
       uExecutionId uniqueidentifier              
      ,uTestTokenId uniqueidentifier              
      ,dtTestStart datetime              
      ,dtTestEnd datetime              
      ,iSoundVolume int              
      ,iTestStatusId int              
      ,dBound1 decimal              
      ,dBound2 decimal              
      ,dStartProb decimal              
      ,dTestSubjectConstance decimal              
      ,dTestSubjectVariance decimal              
      ,iMaximumTasksToBeShown int              
      ,iMinimumTasksToBeShown int              
      ,dDifficultyUpperBound decimal              
      ,iPerfectNumber int              
      ,iLanguageId int              
      ,iTestSubjectId int              
      ,dStandardErrorConfidenceIntervalAlpha decimal              
      ,uElementFormulaAttributeTemplateId uniqueidentifier              
      ,uResultAttributeGroupId uniqueidentifier              
      ,vAdaptivePropertiesJson nvarchar(MAX)              
      ,iAlgorithmId int              
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1              
      ,iTaskCountDisplayed int              
      ,iTotalEffectiveTimeTaken int              
      ,dtLastTaskAnsweredOn datetime              
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1          
                 
     )              
     WHERE uTestTokenId = @uTestTokenId;              
              
     DECLARE @uExecutionId UNIQUEIDENTIFIER ;              
     SELECT @uExecutionId = uExecutionId FROM               
     OPENJSON(@vResultJSON,'$.TestExecutions')              
     WITH ( uExecutionId uniqueidentifier, uTestTokenId uniqueidentifier)              
     WHERE uTestTokenId = @uTestTokenId;              
              
     INSERT INTO t_TestDrive_Test_Execution_SubSubjectDetails (uExecutionSubSubjectDetailsId               
      ,uExecutionId               
      ,iSubjectId               
      ,dConstance               
      ,dVariance  )          
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestExecutionSubSubjectDetail')              
     WITH (              
       uExecutionSubSubjectDetailsId uniqueidentifier              
      ,uExecutionId uniqueidentifier              
      ,iSubjectId int              
      ,dConstance decimal              
      ,dVariance decimal              
     )              
     WHERE uExecutionId = @uExecutionId;              
              
     INSERT INTO t_TestDrive_Test_Execution_SystemDetails  (uTestExecutionSystemDetailsId               
      ,uExecutionId               
      ,vIPAddress            
      ,dtDatetimeOfLogin               
      ,vBrowserInformation       
      ,vBrowser          
      ,vBrowserVersion            
      ,vOs )            
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestExecutionSystemDetails')              
     WITH (              
       uTestExecutionSystemDetailsId uniqueidentifier              
      ,uExecutionId uniqueidentifier              
      ,vIPAddress nvarchar(50)              
      ,dtDatetimeOfLogin datetime              
      ,vBrowserInformation nvarchar(MAX)              
      ,vBrowser nvarchar(200)              
      ,vBrowserVersion nvarchar(200)              
      ,vOs nvarchar(200)              
     )              
     WHERE uExecutionId = @uExecutionId;              
              
     INSERT INTO t_TestDrive_Test_Result  (      
  uResultId               
     ,uExecutionId               
      ,iPageId               
      ,iTaskStatusId               
      ,dtCreatedOn               
      ,iTimesShown               
      ,iDisplayedOrder               
      ,dNextDifficulty               
      ,cIsCalibratedActive         
      ,dDifficultyBefore               
      ,dDifficultyAfter               
      ,iTaskSubjectId               
      ,dTaskDifficulty               
      ,iTimeTakenToAnswer               
      ,vPageName            
      ,iTimeAllocated               
      ,iTaskTypeId               
      ,iRoundNumber               
      ,dTaskPercentage               
      ,iTaskObjectsCorrect               
      ,iTaskObjectsWrong               
      ,iTaskObjectsNotAnswered               
      ,iTaskWeightage               
      ,cIsSeparated       
      ,cHasTaskBeenDisplayed             
      ,iAttemptsToSolveTaskCorrectly               
      ,cIsDataStoragePlaceHolder               
      ,iParentTaskId               
      ,iSuperGroupTimeAllocated               
      ,vTaskResultAttribute               
      ,vTaskElementResultAttribute         
      ,vTaskDifficulty        
      ,iCategoryId               
      ,iCategoryCompetencyId    )            
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResult')              
     WITH (              
       uResultId uniqueidentifier              
      ,uExecutionId uniqueidentifier              
      ,iPageId int              
      ,iTaskStatusId int              
      ,dtCreatedOn datetime              
      ,iTimesShown int              
      ,iDisplayedOrder int              
      ,dNextDifficulty decimal              
      ,cIsCalibratedActive char(1)              
      ,dDifficultyBefore decimal              
      ,dDifficultyAfter decimal              
      ,iTaskSubjectId int              
      ,dTaskDifficulty decimal              
      ,iTimeTakenToAnswer int              
      ,vPageName nvarchar(200)              
      ,iTimeAllocated int              
      ,iTaskTypeId int              
      ,iRoundNumber int              
      ,dTaskPercentage decimal              
      ,iTaskObjectsCorrect int              
      ,iTaskObjectsWrong int              
      ,iTaskObjectsNotAnswered int              
      ,iTaskWeightage int              
      ,cIsSeparated char(1)              
      ,cHasTaskBeenDisplayed char(1)              
      ,iAttemptsToSolveTaskCorrectly int              
      ,cIsDataStoragePlaceHolder char(1)              
      ,iParentTaskId int              
      ,iSuperGroupTimeAllocated int              
      ,vTaskResultAttribute nvarchar(MAX)              
      ,vTaskElementResultAttribute nvarchar(MAX)              
      ,vTaskDifficulty nvarchar(MAX)              
      ,iCategoryId int              
      ,iCategoryCompetencyId int              
     )              
     WHERE uExecutionId = @uExecutionId;              
              
     CREATE TABLE #tempResultIds( uResultId UNIQUEIDENTIFIER );              
     INSERT INTO #tempResultIds              
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResult')              
     WITH (uResultId uniqueidentifier,uExecutionId uniqueidentifier)              
     WHERE uExecutionId = @uExecutionId;              
                  
     INSERT INTO t_TestDrive_Test_ResultValues   (      
   uResultValueId               
      ,uResultId               
      ,iElementValueId               
      ,vAnswerValue       
      ,iElementId               
      ,vElementType       
      ,vCorrectAnswer       
      ,iContainerId               
      ,iElementDisplayedOrder               
      ,iAnswerIndex               
      ,iObjectStatus               
      ,iAttemptsToSolveTaskCorrectly               
   ,cIsCorrectAnswer              
      ,dMarkerValue               
  )           
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResultValues')              
     WITH (              
       uResultValueId uniqueidentifier              
      ,uResultId uniqueidentifier              
      ,iElementValueId int              
      ,vAnswerValue NVARCHAR(MAX)              
      ,iElementId int              
      ,vElementType nvarchar(100)              
      ,vCorrectAnswer nvarchar(MAX)              
      ,iContainerId int              
      ,iElementDisplayedOrder int              
      ,iAnswerIndex int              
      ,iObjectStatus int              
      ,iAttemptsToSolveTaskCorrectly int              
   ,cIsCorrectAnswer char(1)              
      ,dMarkerValue decimal              
     )              
     WHERE uResultId in (SELECT uResultId FROM #tempResultIds);              
              
     INSERT INTO t_TestDrive_Test_ResultSummary (      
   uResultSummaryId               
      ,uExecutionId               
      ,iTestNumberOfTasks            
      ,dTestCorrectAnswerValue               
      ,dTestWrongAnswerValue               
      ,dTestNotAttemptedValue               
      ,dTestPoints               
      ,dTestStandardErrorConfidenceIntervalLowerBound               
      ,dTestStandardErrorConfidenceIntervalUpperBound               
      ,iTaskObjectsCorrect               
      ,iTaskObjectsWrong               
      ,iTaskObjectsNotAnswered               
      ,vResultAttribute       
  )             
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResultSummary')              
     WITH(              
       uResultSummaryId uniqueidentifier              
      ,uExecutionId uniqueidentifier              
      ,iTestNumberOfTasks int           
      ,dTestCorrectAnswerValue decimal              
      ,dTestWrongAnswerValue decimal              
      ,dTestNotAttemptedValue decimal              
      ,dTestPoints decimal              
      ,dTestStandardErrorConfidenceIntervalLowerBound decimal              
      ,dTestStandardErrorConfidenceIntervalUpperBound decimal              
      ,iTaskObjectsCorrect int              
      ,iTaskObjectsWrong int              
      ,iTaskObjectsNotAnswered int              
      ,vResultAttribute nvarchar(MAX)              
     )              
     WHERE uExecutionId = @uExecutionId;              
              
  CREATE TABLE #tempResultSummaryIds( uResultSummaryId UNIQUEIDENTIFIER );              
     INSERT INTO #tempResultSummaryIds              
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResultSummary')              
     WITH (uResultSummaryId uniqueidentifier,uExecutionId uniqueidentifier)              
     WHERE uExecutionId = @uExecutionId;              
              
     INSERT INTO t_TestDrive_Test_ResultSummary_SubSubject (      
   uResultSummaryId               
      ,iSubjectId               
      ,dSubSubjectPoints               
      ,iSubSubjectNumberOfTasks               
      ,dSubSubjectCorrectAnswerValue               
      ,dSubSubjectWrongAnswerValue               
      ,dSubSubjectNotAttemptedValue               
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound               
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound               
      ,iTaskObjectsCorrect               
      ,iTaskObjectsWrong               
      ,iTaskObjectsNotAnswered               
      ,vResultAttribute              
      ,cIsSurveySubject          
  )         
     SELECT * FROM               
     OPENJSON(@vResultJSON,'$.TestResultSubSubjectSummary')              
     WITH(              
       uResultSummaryId uniqueidentifier              
      ,iSubjectId int              
      ,dSubSubjectPoints decimal              
      ,iSubSubjectNumberOfTasks int              
      ,dSubSubjectCorrectAnswerValue decimal              
      ,dSubSubjectWrongAnswerValue decimal              
      ,dSubSubjectNotAttemptedValue decimal              
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal              
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal              
      ,iTaskObjectsCorrect int              
      ,iTaskObjectsWrong int              
      ,iTaskObjectsNotAnswered int              
      ,vResultAttribute nvarchar(MAX)              
      ,cIsSurveySubject char(1)              
     )              
     WHERE uResultSummaryId IN (SELECT uResultSummaryId FROM #tempResultSummaryIds);              
              
     DROP TABLE #tempResultIds;              
     DROP TABLE #tempResultSummaryIds;              
    END              
              
   FETCH NEXT FROM CURSOR_TestTokenData INTO @uTestTokenId                        
               
  END              
  CLOSE CURSOR_TestTokenData              
  DEALLOCATE CURSOR_TestTokenData              
              
  IF EXISTS(SELECT * FROM t_TestDrive_WrapperTest_TestForPupil WHERE uCycleId = @uCycleId AND uPupilId = @uSourcePupilId)              
   BEGIN              
    UPDATE t_TestDrive_WrapperTest_TestForPupil               
    SET uClassId = @uClassId, uPupilId = @uTargetPupilId              
    WHERE uCycleId = @uCycleId AND uPupilId = @uSourcePupilId              
   END              
  ELSE              
   BEGIN              
    INSERT INTO t_TestDrive_WrapperTest_TestForPupil   (      
  uWrapperTestId              
     ,uTestId              
     ,uPupilId       
     ,uClassId              
     ,uCycleId              
     ,iCycleRepetition        
 )           
    SELECT               
      uWrapperTestId              
     ,uTestId              
     ,@uTargetPupilId              
     ,@uClassId              
     ,uCycleId              
     ,iCycleRepetition              
     FROM               
    OPENJSON(@vResultJSON,'$.WrapperTest')              
    WITH (              
      uWrapperTestId uniqueidentifier              
     ,uTestId uniqueidentifier              
     ,uPupilId uniqueidentifier              
     ,uClassId uniqueidentifier              
     ,uCycleId uniqueidentifier              
     ,iCycleRepetition int              
    )              
    WHERE uCycleId = @uCycleId AND uPupilId = @uTargetPupilId              
   END              
              
-- Essay Data

    
  DECLARE @uOfflineTokenId UNIQUEIDENTIFIER;    
  DECLARE CURSOR_OfflineTestTokenData CURSOR FOR    
  SELECT uOfflineTokenId FROM OPENJSON(@vResultJSON,'$.EssayTestTokens')    
  WITH ( uOfflineTokenId UNIQUEIDENTIFIER '$.uOfflineTokenId' )    
      
  OPEN CURSOR_OfflineTestTokenData                                        
  FETCH NEXT FROM CURSOR_OfflineTestTokenData into @uOfflineTokenId    
  WHILE(@@FETCH_STATUS <> -1)                                   
  BEGIN   
       IF EXISTS( SELECT * FROM t_TestDrive_Test_OfflineToken WHERE uOfflineTokenId = @uOfflineTokenId) AND @cIsRecycleBinDataBase = 'N'    
              BEGIN  
                     UPDATE t_TestDrive_Test_OfflineToken  
                     SET uClassId = @uClassId, uPupilId = @uTargetPupilId      
                     WHERE uOfflineTokenId = @uOfflineTokenId  
              END  
       ELSE  
              BEGIN  
                     INSERT INTO t_TestDrive_Test_OfflineToken  
                     (  
                     uOfflineTokenId  
                     ,uTestId  
                     ,uPupilId  
                     ,uClassId  
                     ,uCycleId  
                     ,dtCreatedOn  
                     ,uParentTestId  
                     ,iCycleRepetition  
                     )  
                     SELECT   
                      uOfflineTokenId  
                     ,uTestId  
                     ,@uTargetPupilId     
                     ,@uClassId  
                     ,uCycleId  
                     ,dtCreatedOn  
                     ,uParentTestId  
                     ,iCycleRepetition  
                     FROM OPENJSON(@vResultJSON,'$.EssayTestTokens')  
                     WITH (  
                     uOfflineTokenId     uniqueidentifier  
                     ,uTestId      uniqueidentifier  
                     ,uPupilId     uniqueidentifier  
                     ,uClassId     uniqueidentifier  
                     ,uCycleId     uniqueidentifier  
                     ,dtCreatedOn  datetime  
                     ,uParentTestId       uniqueidentifier  
                     ,iCycleRepetition    int  
                     )  
                     WHERE uOfflineTokenId = @uOfflineTokenId  
                       
                     INSERT INTO t_TestDrive_Test_OfflineToken_Execution   
                     (  
                     uOfflineTestExecutionId  
                     ,uOfflineTokenId  
                     ,vExecutionNumber  
                     ,dPoints  
                     ,dtResultPointImport  
                     )  
                     SELECT   
                      uOfflineTestExecutionId  
                     ,uOfflineTokenId  
                     ,vExecutionNumber  
                     ,dPoints  
                     ,dtResultPointImport  
                     FROM OPENJSON(@vResultJSON,'$.EssayTestExecutions')  
      WITH (  
                     uOfflineTestExecutionId   uniqueidentifier  
                     ,uOfflineTokenId     uniqueidentifier  
                     ,vExecutionNumber    nvarchar  
                     ,dPoints      decimal  
                     ,dtResultPointImport datetime  
                     )  
                     WHERE uOfflineTokenId = @uOfflineTokenId  
  
                     INSERT INTO t_TestDrive_Test_OfflineToken_Topic  
                     (  
                     uOfflineTokenTopicId  
                     ,uOfflineTokenId  
                     ,iTopicId  
                     ,iDisplayOrder  
                     )  
                     SELECT   
                      uOfflineTokenTopicId  
                     ,uOfflineTokenId  
                     ,iTopicId  
                     ,iDisplayOrder  
                     FROM OPENJSON(@vResultJSON,'$.EssayTestResults')  
                     WITH (  
                     uOfflineTokenTopicId      uniqueidentifier  
                     ,uOfflineTokenId     uniqueidentifier  
                     ,iTopicId     int  
                     ,iDisplayOrder       int  
                     )  
                     WHERE uOfflineTokenId = @uOfflineTokenId  
                         
              END  
  
   FETCH NEXT FROM CURSOR_OfflineTestTokenData INTO @uOfflineTokenId      
  END  
  CLOSE CURSOR_OfflineTestTokenData    
  DEALLOCATE CURSOR_OfflineTestTokenData    
  

-------------


  SET @Message = 'Success'              
 END TRY              
 BEGIN CATCH              
  SET @Message = ERROR_MESSAGE();              
  ROLLBACK TRANSACTION              
 END CATCH              
 COMMIT TRANSACTION              
              
 SELECT (SELECT @Message as vMessage for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                   
END 

--------------------------------------------------------


ALTER PROCedure [dbo].[p_Extranet_Pupil_Module_InsertResultToDatabase]                    
(                                                        
  @vResultJSON  nvarchar(max),                  
  @uCycleId uniqueidentifier,                  
  @uClassId uniqueidentifier,                  
  @uPupilId uniqueidentifier,                  
  @cIsRecycleBinDataBase CHAR(1)                                            
)                                                        
AS                                                        
BEGIN                  
-- EXEC JProc_TestDrive_Pupil_MovePupils_InsertTestResultsToPupil '{"TestTokens":[],"TestExecutions":[],"TestExecutionSubSubjectDetail":[],"TestExecutionSystemDetails":[],"TestResult":[],"TestResultValues":[],"TestResultSummary":[],"TestResultSubSubjectSummary":[],"WrapperTest":[]}',                  
-- 'b9dadda2-81f4-4d8c-bc98-0763a16d79c5','ab6b68a2-83ac-49a8-b5d9-ad62315f4b7a','65821287-E029-439B-9B9A-8DA7B848170B','N'                  
DECLARE @Message NVARCHAR(MAX);         
DECLARE @blnCommit int       
set @blnCommit = 1                  
 BEGIN TRANSACTION;                  
 BEGIN TRY                  
  DECLARE @uTestTokenId UNIQUEIDENTIFIER;                  
                   
  DECLARE CURSOR_TestTokenData CURSOR FOR                  
  SELECT uTestTokenId FROM OPENJSON(@vResultJSON,'$.TestTokens')                  
  WITH ( uTestTokenId UNIQUEIDENTIFIER '$.uTestTokenId' )                  
                  
  OPEN CURSOR_TestTokenData                                                      
  FETCH NEXT FROM CURSOR_TestTokenData into @uTestTokenId                  
  WHILE(@@FETCH_STATUS <> -1)                                                 
  BEGIN                  
                    
   IF EXISTS( SELECT * FROM t_TestDrive_Test_Token WHERE uTestTokenId = @uTestTokenId) AND @cIsRecycleBinDataBase = 'N'                  
    BEGIN                  
     UPDATE t_TestDrive_Test_Token                   
     SET uClassId = @uClassId                  
     WHERE uTestTokenId = @uTestTokenId                  
    END                  
   ELSE                  
    BEGIN                  
                      
     INSERT INTO t_TestDrive_Test_Token( uTestTokenId                  
      ,vTestTokenNumber                  
      ,uCycleId                  
      ,uPupilId                  
      ,uTestId                  
      ,dtCreatedOn                  
      ,uClassId                  
      ,uParentTestId                  
      ,iCycleRepetition                  
      ,iLoginProviderId                  
      ,dtValidTill                  
      ,cIsActive                  
      ,dtValidFrom                  
      ,dtValidTo                  
      ,iSubjectId                  
      ,cIsPracticeTest                  
      ,dtModifiedOn)               
     SELECT                   
       uTestTokenId                  
      ,vTestTokenNumber                  
      ,uCycleId                  
      ,uPupilId                  
      ,uTestId                  
      ,dtCreatedOn                  
      ,@uClassId                  
      ,uParentTestId                  
      ,iCycleRepetition                  
      ,iLoginProviderId                  
      ,dtValidTill                  
      ,cIsActive                  
      ,dtValidFrom                  
      ,dtValidTo                  
      ,iSubjectId                  
      ,cIsPracticeTest                  
      ,dtModifiedOn --Not Present in Active DB                  
     FROM                   
     OPENJSON(@vResultJSON,'$.TestTokens')                  
     WITH(                  
       uTestTokenId uniqueidentifier                  
      ,vTestTokenNumber nvarchar(26)                  
      ,uCycleId uniqueidentifier                  
      ,uPupilId uniqueidentifier                  
      ,uTestId uniqueidentifier                  
      ,dtCreatedOn smalldatetime                  
      ,uClassId uniqueidentifier                  
      ,uParentTestId uniqueidentifier                  
      ,iCycleRepetition int                  
      ,iLoginProviderId int                  
      ,dtValidTill datetime                  
  ,cIsActive char(1)                  
      ,dtValidFrom datetime                  
      ,dtValidTo datetime                  
      ,iSubjectId int                  
      ,cIsPracticeTest char(1)                  
      ,dtModifiedOn datetime                  
     )                  
     WHERE uTestTokenId = @uTestTokenId;              
                  
     INSERT INTO t_TestDrive_Test_Execution(uExecutionId                  
      ,uTestTokenId                  
      ,dtTestStart                   
      ,dtTestEnd                   
      ,iSoundVolume                   
      ,iTestStatusId                   
      ,dBound1                   
      ,dBound2                   
      ,dStartProb                   
      ,dTestSubjectConstance                   
      ,dTestSubjectVariance                   
      ,iMaximumTasksToBeShown                   
      ,iMinimumTasksToBeShown                   
      ,dDifficultyUpperBound                   
      ,iPerfectNumber                   
      ,iLanguageId                   
      ,iTestSubjectId                   
      ,dStandardErrorConfidenceIntervalAlpha                   
      ,uElementFormulaAttributeTemplateId                   
      ,uResultAttributeGroupId        
   ,vAdaptivePropertiesJson           
      ,iAlgorithmId                 
      ,iTaskCountDisplayed         
      ,iTotalEffectiveTimeTaken         
      ,dtLastTaskAnsweredOn         
   )               
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestExecutions')                  
     WITH (                  
       uExecutionId uniqueidentifier                  
      ,uTestTokenId uniqueidentifier                  
      ,dtTestStart datetime                  
      ,dtTestEnd datetime                  
      ,iSoundVolume int                  
      ,iTestStatusId int                  
      ,dBound1 decimal                  
      ,dBound2 decimal                  
      ,dStartProb decimal                  
      ,dTestSubjectConstance decimal                  
      ,dTestSubjectVariance decimal                  
      ,iMaximumTasksToBeShown int                  
      ,iMinimumTasksToBeShown int                  
      ,dDifficultyUpperBound decimal                  
      ,iPerfectNumber int                  
      ,iLanguageId int                  
      ,iTestSubjectId int                  
      ,dStandardErrorConfidenceIntervalAlpha decimal                  
      ,uElementFormulaAttributeTemplateId uniqueidentifier                  
      ,uResultAttributeGroupId uniqueidentifier                  
      ,vAdaptivePropertiesJson nvarchar(MAX)                  
      ,iAlgorithmId int                  
      --Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1                  
      ,iTaskCountDisplayed int                  
      ,iTotalEffectiveTimeTaken int                  
      ,dtLastTaskAnsweredOn datetime                  
     -- Not Present in Active DB Arcadix_Lernpassplus_Result_2018_SG_1                  
 )                 
     WHERE uTestTokenId = @uTestTokenId;                  
                  
     DECLARE @uExecutionId UNIQUEIDENTIFIER ;                  
     SELECT @uExecutionId = uExecutionId FROM                   
     OPENJSON(@vResultJSON,'$.TestExecutions')                  
     WITH ( uExecutionId uniqueidentifier, uTestTokenId uniqueidentifier)                  
     WHERE uTestTokenId = @uTestTokenId;                  
                  
     INSERT INTO t_TestDrive_Test_Execution_SubSubjectDetails( uExecutionSubSubjectDetailsId                   
      ,uExecutionId                   
      ,iSubjectId                   
      ,dConstance                   
      ,dVariance)                 
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestExecutionSubSubjectDetail')                  
     WITH (                 
       uExecutionSubSubjectDetailsId uniqueidentifier                  
      ,uExecutionId uniqueidentifier                  
      ,iSubjectId int                  
      ,dConstance decimal                  
      ,dVariance decimal                  
     )                  
     WHERE uExecutionId = @uExecutionId;          
                  
     INSERT INTO t_TestDrive_Test_Execution_SystemDetails(        
   uTestExecutionSystemDetailsId                   
      ,uExecutionId                   
      ,vIPAddress         
      ,dtDatetimeOfLogin                   
      ,vBrowserInformation         
      ,vBrowser         
      ,vBrowserVersion         
      ,vOs         
  )                
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestExecutionSystemDetails')                  
     WITH (                  
       uTestExecutionSystemDetailsId uniqueidentifier                  
      ,uExecutionId uniqueidentifier                  
      ,vIPAddress nvarchar(50)                  
      ,dtDatetimeOfLogin datetime                  
      ,vBrowserInformation nvarchar(MAX)                  
      ,vBrowser nvarchar(200)                  
      ,vBrowserVersion nvarchar(200)                  
      ,vOs nvarchar(200)                  
     )                  
     WHERE uExecutionId = @uExecutionId;                  
                  
     INSERT INTO t_TestDrive_Test_Result(        
   uResultId                   
      ,uExecutionId                   
      ,iPageId                   
      ,iTaskStatusId                   
      ,dtCreatedOn                   
      ,iTimesShown                   
      ,iDisplayedOrder                   
      ,dNextDifficulty                   
      ,cIsCalibratedActive         
      ,dDifficultyBefore                   
      ,dDifficultyAfter                   
      ,iTaskSubjectId                   
      ,dTaskDifficulty                   
      ,iTimeTakenToAnswer                   
      ,vPageName         
      ,iTimeAllocated                   
      ,iTaskTypeId                   
      ,iRoundNumber                   
      ,dTaskPercentage                   
      ,iTaskObjectsCorrect                   
      ,iTaskObjectsWrong                   
      ,iTaskObjectsNotAnswered                   
      ,iTaskWeightage                   
      ,cIsSeparated             
      ,cHasTaskBeenDisplayed         
      ,iAttemptsToSolveTaskCorrectly                  
      ,cIsDataStoragePlaceHolder                
      ,iParentTaskId                   
      ,iSuperGroupTimeAllocated                   
      ,vTaskResultAttribute         
      ,vTaskElementResultAttribute         
    ,vTaskDifficulty          
      ,iCategoryId         
      ,iCategoryCompetencyId             
   ,vElementAnswerJson         
      ,dtModifiedOn         
  )              
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResult')                  
     WITH (                  
       uResultId uniqueidentifier                  
      ,uExecutionId uniqueidentifier                  
      ,iPageId int                  
      ,iTaskStatusId int                  
      ,dtCreatedOn datetime                  
      ,iTimesShown int                  
      ,iDisplayedOrder int                  
      ,dNextDifficulty decimal                  
      ,cIsCalibratedActive char(1)                  
      ,dDifficultyBefore decimal                  
      ,dDifficultyAfter decimal                  
      ,iTaskSubjectId int                  
      ,dTaskDifficulty decimal                  
      ,iTimeTakenToAnswer int                  
      ,vPageName nvarchar(200)                  
      ,iTimeAllocated int                  
      ,iTaskTypeId int                  
      ,iRoundNumber int                  
      ,dTaskPercentage decimal                  
      ,iTaskObjectsCorrect int                  
      ,iTaskObjectsWrong int                  
      ,iTaskObjectsNotAnswered int                  
      ,iTaskWeightage int                  
      ,cIsSeparated char(1)                  
      ,cHasTaskBeenDisplayed char(1)                  
      ,iAttemptsToSolveTaskCorrectly int                  
      ,cIsDataStoragePlaceHolder char(1)                  
      ,iParentTaskId int                  
      ,iSuperGroupTimeAllocated int                  
      ,vTaskResultAttribute nvarchar(MAX)                  
      ,vTaskElementResultAttribute nvarchar(MAX)                  
      ,vTaskDifficulty nvarchar(MAX)                  
      ,iCategoryId int                  
      ,iCategoryCompetencyId int              
   ,vElementAnswerJson nvarchar(max)              
      ,dtModifiedOn dateTime              
     )                       
     WHERE uExecutionId = @uExecutionId;                  
                  
     CREATE TABLE #tempResultIds( uResultId UNIQUEIDENTIFIER,uExecutionId uniqueidentifier );                  
     INSERT INTO #tempResultIds(uResultId ,uExecutionId )                
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResult')                  
     WITH (uResultId uniqueidentifier,uExecutionId uniqueidentifier)                  
     WHERE uExecutionId = @uExecutionId;                  
                      
     INSERT INTO t_TestDrive_Test_ResultValues(        
  uResultValueId                   
      ,uResultId                   
      ,iElementValueId                   
      ,vAnswerValue         
      ,iElementId                   
      ,vElementType         
      ,vCorrectAnswer        
      ,iContainerId                   
      ,iElementDisplayedOrder                   
      ,iAnswerIndex                   
      ,iObjectStatus                   
      ,iAttemptsToSolveTaskCorrectly                   
      ,cIsCorrectAnswer            
      ,dMarkerValue         
  )                 
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResultValues')                  
     WITH (                  
       uResultValueId uniqueidentifier                  
      ,uResultId uniqueidentifier                  
      ,iElementValueId int                  
      ,vAnswerValue NVARCHAR(MAX)                  
      ,iElementId int                  
      ,vElementType nvarchar(100)                  
      ,vCorrectAnswer nvarchar(MAX)                  
      ,iContainerId int                  
      ,iElementDisplayedOrder int                  
      ,iAnswerIndex int                  
      ,iObjectStatus int                  
      ,iAttemptsToSolveTaskCorrectly int                  
      ,cIsCorrectAnswer char(1)               
      ,dMarkerValue decimal                  
     )                  
     WHERE uResultId in (SELECT uResultId FROM #tempResultIds);                  
                  
     INSERT INTO t_TestDrive_Test_ResultSummary (        
  uResultSummaryId                   
      ,uExecutionId                   
      ,iTestNumberOfTasks                   
      ,dTestCorrectAnswerValue                   
      ,dTestWrongAnswerValue                   
      ,dTestNotAttemptedValue                   
      ,dTestPoints                   
      ,dTestStandardErrorConfidenceIntervalLowerBound                   
      ,dTestStandardErrorConfidenceIntervalUpperBound                   
      ,iTaskObjectsCorrect                   
      ,iTaskObjectsWrong                   
      ,iTaskObjectsNotAnswered                   
      ,vResultAttribute         
  )                 
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResultSummary')                  
     WITH(                  
       uResultSummaryId uniqueidentifier                  
      ,uExecutionId uniqueidentifier                  
      ,iTestNumberOfTasks int                  
      ,dTestCorrectAnswerValue decimal                  
      ,dTestWrongAnswerValue decimal                  
      ,dTestNotAttemptedValue decimal                  
      ,dTestPoints decimal                  
      ,dTestStandardErrorConfidenceIntervalLowerBound decimal                  
      ,dTestStandardErrorConfidenceIntervalUpperBound decimal                  
      ,iTaskObjectsCorrect int                  
      ,iTaskObjectsWrong int                  
      ,iTaskObjectsNotAnswered int                  
      ,vResultAttribute nvarchar(MAX)                  
     )                  
     WHERE uExecutionId = @uExecutionId;                  
                  
     CREATE TABLE #tempResultSummaryIds( uResultSummaryId UNIQUEIDENTIFIER,uExecutionId uniqueidentifier );                  
     INSERT INTO #tempResultSummaryIds(uResultSummaryId,uExecutionId)           
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResultSummary')          
     WITH (uResultSummaryId uniqueidentifier,uExecutionId uniqueidentifier)                  
     WHERE uExecutionId = @uExecutionId;                  
                  
     INSERT INTO t_TestDrive_Test_ResultSummary_SubSubject(        
    uResultSummaryId                   
      ,iSubjectId                   
      ,dSubSubjectPoints                   
      ,iSubSubjectNumberOfTasks                   
      ,dSubSubjectCorrectAnswerValue                   
      ,dSubSubjectWrongAnswerValue                   
      ,dSubSubjectNotAttemptedValue                   
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound                   
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound                   
      ,iTaskObjectsCorrect                   
    ,iTaskObjectsWrong                   
      ,iTaskObjectsNotAnswered                   
      ,vResultAttribute            
      ,cIsSurveySubject         
  )                 
     SELECT * FROM                   
     OPENJSON(@vResultJSON,'$.TestResultSubSubjectSummary')                  
     WITH(                  
       uResultSummaryId uniqueidentifier                  
      ,iSubjectId int                  
      ,dSubSubjectPoints decimal                  
      ,iSubSubjectNumberOfTasks int                  
      ,dSubSubjectCorrectAnswerValue decimal                  
      ,dSubSubjectWrongAnswerValue decimal                  
      ,dSubSubjectNotAttemptedValue decimal                  
      ,dSubSubjectStandardErrorConfidenceIntervalLowerBound decimal                  
      ,dSubSubjectStandardErrorConfidenceIntervalUpperBound decimal                  
      ,iTaskObjectsCorrect int                  
      ,iTaskObjectsWrong int                  
      ,iTaskObjectsNotAnswered int                  
      ,vResultAttribute nvarchar(MAX)                  
      ,cIsSurveySubject char(1)                  
     )                  
     WHERE uResultSummaryId IN (SELECT uResultSummaryId FROM #tempResultSummaryIds);                  
                  
     DROP TABLE #tempResultIds;                  
     DROP TABLE #tempResultSummaryIds;                  
    END                  
                  
   FETCH NEXT FROM CURSOR_TestTokenData INTO @uTestTokenId                            
                   
  END                  
  CLOSE CURSOR_TestTokenData                  
  DEALLOCATE CURSOR_TestTokenData                  
                  
  IF EXISTS(SELECT * FROM t_TestDrive_WrapperTest_TestForPupil WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId)                  
   BEGIN                  
    UPDATE t_TestDrive_WrapperTest_TestForPupil                   
    SET uClassId = @uClassId                  
    WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId                  
   END                  
  ELSE                  
   BEGIN                  
    INSERT INTO t_TestDrive_WrapperTest_TestForPupil(        
   uWrapperTestId                  
     ,uTestId                  
     ,uPupilId                  
     ,uClassId                  
     ,uCycleId                  
     ,iCycleRepetition          
 )               
    SELECT                   
      uWrapperTestId                  
     ,uTestId                  
     ,uPupilId                  
     ,@uClassId                  
     ,uCycleId             
     ,iCycleRepetition                  
     FROM                   
    OPENJSON(@vResultJSON,'$.WrapperTest')                  
    WITH (                  
      uWrapperTestId uniqueidentifier                  
     ,uTestId uniqueidentifier                  
     ,uPupilId uniqueidentifier                  
     ,uClassId uniqueidentifier                  
     ,uCycleId uniqueidentifier                  
     ,iCycleRepetition int                  
    )                  
    WHERE uCycleId = @uCycleId AND uPupilId = @uPupilId                  
   END                  

    -- Essay Data
                  
  DECLARE @uOfflineTokenId UNIQUEIDENTIFIER;    
  DECLARE CURSOR_OfflineTestTokenData CURSOR FOR    
  SELECT uOfflineTokenId FROM OPENJSON(@vResultJSON,'$.EssayTestTokens')    
  WITH ( uOfflineTokenId UNIQUEIDENTIFIER '$.uOfflineTokenId' )    
      
  OPEN CURSOR_OfflineTestTokenData                                        
  FETCH NEXT FROM CURSOR_OfflineTestTokenData into @uOfflineTokenId    
  WHILE(@@FETCH_STATUS <> -1)                                   
  BEGIN   
 IF EXISTS( SELECT * FROM t_TestDrive_Test_OfflineToken WHERE uOfflineTokenId = @uOfflineTokenId) AND @cIsRecycleBinDataBase = 'N'    
  BEGIN  
   UPDATE t_TestDrive_Test_OfflineToken  
   SET uClassId = @uClassId  
   WHERE uOfflineTokenId = @uOfflineTokenId  
  END  
 ELSE  
  BEGIN  
   INSERT INTO t_TestDrive_Test_OfflineToken  
   (  
    uOfflineTokenId  
   ,uTestId  
   ,uPupilId  
   ,uClassId  
   ,uCycleId  
   ,dtCreatedOn  
   ,uParentTestId  
   ,iCycleRepetition  
   )  
   SELECT   
    uOfflineTokenId  
   ,uTestId  
   ,uPupilId  
   ,@uClassId  
   ,uCycleId  
   ,dtCreatedOn  
   ,uParentTestId  
   ,iCycleRepetition  
   FROM OPENJSON(@vResultJSON,'$.EssayTestTokens')  
   WITH (  
    uOfflineTokenId uniqueidentifier  
   ,uTestId uniqueidentifier  
   ,uPupilId uniqueidentifier  
   ,uClassId uniqueidentifier  
   ,uCycleId uniqueidentifier  
   ,dtCreatedOn datetime  
   ,uParentTestId uniqueidentifier  
   ,iCycleRepetition int  
   )  
   WHERE uOfflineTokenId = @uOfflineTokenId  
     
   INSERT INTO t_TestDrive_Test_OfflineToken_Execution   
   (  
    uOfflineTestExecutionId  
   ,uOfflineTokenId  
   ,vExecutionNumber  
   ,dPoints  
   ,dtResultPointImport  
   )  
   SELECT   
    uOfflineTestExecutionId  
   ,uOfflineTokenId  
   ,vExecutionNumber  
   ,dPoints  
   ,dtResultPointImport  
   FROM OPENJSON(@vResultJSON,'$.EssayTestExecutions')  
   WITH (  
    uOfflineTestExecutionId uniqueidentifier  
   ,uOfflineTokenId uniqueidentifier  
   ,vExecutionNumber nvarchar  
   ,dPoints decimal  
   ,dtResultPointImport datetime  
   )  
   WHERE uOfflineTokenId = @uOfflineTokenId  
  
   INSERT INTO t_TestDrive_Test_OfflineToken_Topic  
   (  
    uOfflineTokenTopicId  
   ,uOfflineTokenId  
   ,iTopicId  
   ,iDisplayOrder  
   )  
   SELECT   
    uOfflineTokenTopicId  
   ,uOfflineTokenId  
   ,iTopicId  
   ,iDisplayOrder  
   FROM OPENJSON(@vResultJSON,'$.EssayTestResults')  
   WITH (  
    uOfflineTokenTopicId uniqueidentifier  
   ,uOfflineTokenId uniqueidentifier  
   ,iTopicId int  
   ,iDisplayOrder int  
   )  
   WHERE uOfflineTokenId = @uOfflineTokenId  
       
  END  
  
   FETCH NEXT FROM CURSOR_OfflineTestTokenData INTO @uOfflineTokenId      
  END  
  CLOSE CURSOR_OfflineTestTokenData    
  DEALLOCATE CURSOR_OfflineTestTokenData    



  SET @Message = 'Success'                  
 END TRY                  
 BEGIN CATCH                  
 print 'error' + ERROR_MESSAGE() ;          
 print ERROR_LINE();          
   SET @Message = ERROR_MESSAGE();                  
   ROLLBACK TRANSACTION            
   set @blnCommit = 0            
 END CATCH                  
  if(@blnCommit = 1)      
  BEGIN      
   COMMIT TRANSACTION;                  
   END           
                  
 SELECT (SELECT @Message as vMessage for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult                       
END 


----------------------------------------------------------------


ALTER PROC [dbo].[p_Extranet_Pupil_Module_GetSourceClassResults]         
(                            
 @uCycleId uniqueidentifier,            
 @uClassId uniqueidentifier,          
 @uPupilId uniqueidentifier                   
)                            
AS          
-- EXEC JProc_TestDrive_Pupil_MovePupils_GetSourceClassResults_New '689E7E70-A052-43C8-AFEA-7C11140A2C95','6FA2ED4B-C719-4B5F-BE8B-F0751E76D644',          
--'E8CE565A-3710-4E4E-8FC3-EA8322C6C091'                            
Begin        
      
 DECLARE @tempRecords TABLE      
(uExecutionId UNIQUEIDENTIFIER)      
          
 INSERT INTO @tempRecords          
 SELECT te.uExecutionId          
 FROM t_testdrive_test_token tt                           
 INNER JOIN t_testdrive_test_execution te on tt.uTestTokenId = te.uTestTokenId             
 WHERE           
 tt.uPupilId = @uPupilId           
 AND tt.uCycleId = @uCycleId           
      
           
 --Token table                          
 select (select tt.*         
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
from t_testdrive_test_token tt                        
WHERE tt.uPupilId = @uPupilId AND tt.uCycleId = @uCycleId AND tt.uClassId = @uClassId          
                         
 --t_TestDrive_Test_Execution                          
 select ( select            
TE.*            
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult            
from t_testdrive_test_execution TE         
inner join @tempRecords T on TE.uExecutionId  = T.uExecutionId      
                     
                         
 --t_TestDrive_Test_Execution_SubSubjectDetails                          
 select ( select           
TES.*       
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult            
from t_TestDrive_Test_Execution_SubSubjectDetails TES          
inner join @tempRecords T on TES.uExecutionId  = T.uExecutionId                   
                        
 --t_TestDrive_Test_Execution_SystemDetails                          
 select (  select           
 TES.*            
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
from t_TestDrive_Test_Execution_SystemDetails TES          
inner join @tempRecords T on TES.uExecutionId  = T.uExecutionId        
                         
 --t_TestDrive_Test_Result                          
  select (select           
  TTR.*           
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
from t_testdrive_test_result TTR           
inner join @tempRecords T on TTR.uExecutionId  = T.uExecutionId      
                      
 --t_testdrive_test_resultvalues                          
 select (select           
TTRV.*           
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
from t_testdrive_test_resultvalues TTRV where TTRV.uResultId in                            
 (                            
 select uresultid  from t_testdrive_test_result TTR           
inner join @tempRecords T on TTR.uExecutionId  = T.uExecutionId        
 )                            
                         
 --t_testdrive_test_resultsummary                          
 select ( select           
 TTRS.*         
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult from           
t_testdrive_test_resultsummary TTRS      
inner join @tempRecords T on TTRS.uExecutionId  = T.uExecutionId      
      
      
                         
 --t_testdrive_test_resultsummary_SubSubject                          
 select ( select           
 TTRSS.*           
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
from t_testdrive_test_resultsummary_SubSubject TTRSS where TTRSS.uresultsummaryid in                            
 (                            
 select uresultsummaryid  from t_testdrive_test_resultsummary TTRS      
inner join @tempRecords T on TTRS.uExecutionId  = T.uExecutionId         
 )                          
                          
 -- wrapper table                   
 select ( select           
 TW.*        
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
FROM t_TestDrive_WrapperTest_TestForPupil TW          
where uClassId = @uClassId          
 and uPupilId = @uPupilId           
 and uCycleId = @uCycleId              
        
		 -- Essay Details------
 select ( select           
 OT.*        
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
FROM t_TestDrive_Test_OfflineToken OT          
where uClassId = @uClassId          
 and uPupilId = @uPupilId 


  select ( select           
 OTE.*        
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
FROM t_TestDrive_Test_OfflineToken_Execution OTE    
inner join  t_TestDrive_Test_OfflineToken OT on OTE.uOfflineTokenId = OT.uOfflineTokenId    
where OT.uClassId = @uClassId          
 and OT.uPupilId = @uPupilId    
 
  select ( select           
 OTT.*        
for json path,INCLUDE_NULL_VALUES, without_array_wrapper) as JSONResult           
FROM t_TestDrive_Test_OfflineToken_Topic OTT         
inner join  t_TestDrive_Test_OfflineToken OT on OTT.uOfflineTokenId = OT.uOfflineTokenId
where OT.uClassId = @uClassId          
 and OT.uPupilId = @uPupilId  

 ---------------- Esaay Details -------


 End 
